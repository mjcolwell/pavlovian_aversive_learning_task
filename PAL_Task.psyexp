<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['Participant.ID'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'Participant.ID': 'P00X', 'Visit': 'Pre / Post', 'Task Version (required)': '1–3', 'fMRI_enabled': 'No', 'Stim_Cal_enabled': 'Yes', 'Electrode_Loc': 'LN or UN or Cross'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="Eyetracker_Monitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1680, 1050]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="-0.3000, -0.3000, -0.3000" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="PAL_Task" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="" valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="PsychToolbox" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="info" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="Initialisation">
      <RoutineSettingsComponent name="Initialisation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Initialisation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Background_Box" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual&amp;#10;&amp;#10;grayBox = visual.rect.Rect(win, width=0.8, height=0.8, units='', lineWidth=0, lineColor=None, lineColorSpace=None, fillColor=[0.004, 0.004, 0.004], fillColorSpace='none', pos=(0, 0))" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {visual} from 'psychopy';&amp;#10;grayBox = new visual.rect.Rect(psychoJS.window, {&quot;width&quot;: 0.8, &quot;height&quot;: 0.8, &quot;units&quot;: &quot;&quot;, &quot;lineWidth&quot;: 0, &quot;lineColor&quot;: null, &quot;lineColorSpace&quot;: null, &quot;fillColor&quot;: [0.004, 0.004, 0.004], &quot;fillColorSpace&quot;: &quot;none&quot;, &quot;pos&quot;: [0, 0]});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Background_Box" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Task_Version_Select" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import core, visual, event&amp;#10;&amp;#10;# get and clean your version string&amp;#10;TaskVersion = expInfo['Task Version (required)'].strip()&amp;#10;&amp;#10;# pick your files based on version&amp;#10;if TaskVersion == '1':&amp;#10;    basePath = 'Conditions/Version_1/'&amp;#10;elif TaskVersion == '2':&amp;#10;    basePath = 'Conditions/Version_2/'&amp;#10;elif TaskVersion == '3':&amp;#10;    basePath = 'Conditions/Version_3/'&amp;#10;else:&amp;#10;    # show error message on screen&amp;#10;    errMsg = visual.TextStim(&amp;#10;        win=win,&amp;#10;        text=&quot;Warning: Must enter a valid task version number\n(i.e., 1, 2 or 3). \n\n Press any key to quit.&quot;,&amp;#10;        color='black',&amp;#10;        height=0.025&amp;#10;    )&amp;#10;    errMsg.draw()&amp;#10;    win.flip()&amp;#10;    # wait for any key before quitting&amp;#10;    event.waitKeys()&amp;#10;    core.quit()&amp;#10;&amp;#10;# if we get here, version was valid&amp;#10;VersionSelection_H1 = basePath + f'PAL_Deterministic Schedule_V{TaskVersion}_H1.xlsx'&amp;#10;VersionSelection_H2 = basePath + f'PAL_Deterministic Schedule_V{TaskVersion}_H2.xlsx'&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;TaskVersion = expInfo[&quot;Task Version (required)&quot;].strip();&amp;#10;if ((TaskVersion === &quot;1&quot;)) {&amp;#10;    basePath = &quot;Conditions/Version_1/&quot;;&amp;#10;} else {&amp;#10;    if ((TaskVersion === &quot;2&quot;)) {&amp;#10;        basePath = &quot;Conditions/Version_2/&quot;;&amp;#10;    } else {&amp;#10;        if ((TaskVersion === &quot;3&quot;)) {&amp;#10;            basePath = &quot;Conditions/Version_3/&quot;;&amp;#10;        } else {&amp;#10;            errMsg = new visual.TextStim({&quot;win&quot;: psychoJS.window, &quot;text&quot;: &quot;Warning: Must enter a valid task version number\n(i.e., 1, 2 or 3). \n\n Press any key to quit.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;height&quot;: 0.025});&amp;#10;            errMsg.draw();&amp;#10;            psychoJS.window.flip();&amp;#10;            psychoJS.eventManager.waitKeys();&amp;#10;            core.quit();&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;VersionSelection_H1 = (basePath + `PAL_Deterministic Schedule_V${TaskVersion}_H1.xlsx`);&amp;#10;VersionSelection_H2 = (basePath + `PAL_Deterministic Schedule_V${TaskVersion}_H2.xlsx`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Task_Version_Select" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Initialise_Selection_Outcome_and_StimDefault" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="selectedColor = 'grey'&amp;#10;last_demand = 30&amp;#10;last_pulse_width = 300" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="selectedColor = &quot;grey&quot;;&amp;#10;last_demand = 30;&amp;#10;last_pulse_width = 300;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Initialise_Selection_Outcome_and_StimDefault" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Initialise_Stim_Cali_Skip" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="StimCalEnabled = expInfo.get('Stim_Cal_enabled', 'no')&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="StimCalEnabled = expInfo.get(&quot;Stim_Cal_enabled&quot;, &quot;no&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Initialise_Stim_Cali_Skip" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Instructions">
      <RoutineSettingsComponent name="Instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box16" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box16" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Text_Code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_black = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Welcome to the PAL task&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.55, 0.25),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_blue = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;ver. {TaskVersion}&quot;,&amp;#10;    color='lightblue',&amp;#10;    pos=(-0.3285, 0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_further = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;During this task, you must work out if \n a given image will result in stimulation or not.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_further2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;The probability of stimulation can change at any point.\n You must learn this probability throughout the task.&quot;,&amp;#10;    color='black',    &amp;#10;    pos=(-0.5, -0.05),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_further3 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_black = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Welcome to the PAL task&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.55), 0.25], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_blue = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `ver. ${TaskVersion}`, &quot;color&quot;: &quot;lightblue&quot;, &quot;pos&quot;: [(- 0.3285), 0.25], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_further = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `During this task, you must work out if&amp;#10;a given image will result in stimulation or not.`&amp;#10;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_further2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `The probability of stimulation can change at any point.&amp;#10;You must learn this probability throughout the task.`&amp;#10;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.05)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_further3 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_black.draw()&amp;#10;text_blue.draw()&amp;#10;text_further.draw()&amp;#10;text_further2.draw()&amp;#10;text_further3.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_black.draw();&amp;#10;text_blue.draw();&amp;#10;text_further.draw();&amp;#10;text_further2.draw();&amp;#10;text_further3.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Text_Code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Instr_Key1" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Instr_Key1" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Shock_Calib">
      <RoutineSettingsComponent name="Shock_Calib" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box19" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box19" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="EyeL_Calib">
      <RoutineSettingsComponent name="EyeL_Calib" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="EyeL_Calib" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Eye_Calib_1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="el_tracker.doTrackerSetup();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="el_tracker.doTrackerSetup()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Eye_Calib_1" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Routine_Initial_Display">
      <RoutineSettingsComponent name="Main_Routine_Initial_Display" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_Initial_Display" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="Cued_Image_Initial" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Fractals/Version_1/ApoAV-250717-31.png" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Cued_Image_Initial" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.45, 0.45)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
    </Routine>
    <Routine name="Break">
      <RoutineSettingsComponent name="Break" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Break" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="TimerCode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;import numpy as np&amp;#10;&amp;#10;from psychopy import visual, core, event&amp;#10;import numpy as np&amp;#10;&amp;#10;# === SETTINGS ===&amp;#10;timer_duration = 210  # in seconds&amp;#10;radius = 0.075        # size of the circular timer&amp;#10;pos = (0, 0)          # position of the timer on screen&amp;#10;&amp;#10;# === SETUP WINDOW ===&amp;#10;#win = visual.Window(fullscr=True, color='grey', units='height')&amp;#10;&amp;#10;# === BACKGROUND BOX ===&amp;#10;grayBox2 = visual.Rect(&amp;#10;    win,&amp;#10;    width=0.8,&amp;#10;    height=0.8,&amp;#10;    units='height',&amp;#10;    lineWidth=0,&amp;#10;    lineColor=None,&amp;#10;    fillColor=[0.004, 0.004, 0.004],&amp;#10;    fillColorSpace='rgb',&amp;#10;    pos=(0, 0)&amp;#10;)&amp;#10;&amp;#10;# === CIRCLE BEHIND THE WEDGE ===&amp;#10;circle_bg = visual.Circle(&amp;#10;    win,&amp;#10;    radius=radius,&amp;#10;    edges=128,&amp;#10;    fillColor=[0.1, 0.1, 0.1],  # dark gray&amp;#10;    fillColorSpace='rgb',&amp;#10;    lineColor=None,&amp;#10;    pos=pos,&amp;#10;    autoDraw=False&amp;#10;)&amp;#10;&amp;#10;# === TIMER WEDGE FUNCTION ===&amp;#10;def make_wedge(progress_fraction, radius=0.2, resolution=100):&amp;#10;    # Creates a counterclockwise wedge starting from top (90 degrees)&amp;#10;    angle = 360 * progress_fraction&amp;#10;    num_points = max(2, int(resolution * progress_fraction))&amp;#10;    theta = np.linspace(90, 90 + angle, num_points)&amp;#10;    x = np.cos(np.deg2rad(theta)) * radius&amp;#10;    y = np.sin(np.deg2rad(theta)) * radius&amp;#10;    verts = [(0, 0)] + list(zip(x, y))&amp;#10;    return verts&amp;#10;&amp;#10;# === INITIALIZE TIMER CLOCK ===&amp;#10;timer_clock = core.Clock()&amp;#10;&amp;#10;# === INITIALIZE WEDGE SHAPE ===&amp;#10;wedge = visual.ShapeStim(&amp;#10;    win,&amp;#10;    vertices=make_wedge(1.0, radius),&amp;#10;    fillColor=[0.28, 0.28, 0.28],&amp;#10;    lineColor=None,&amp;#10;    fillColorSpace='rgb',&amp;#10;    pos=pos,&amp;#10;    closeShape=True,&amp;#10;    autoDraw=False&amp;#10;)&amp;#10;&amp;#10;# === OPTIONAL LABEL TEXT ===&amp;#10;label = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;This is a break period. You are over 50% complete.\nYou may relax and exit the eyetracker.&quot;,&amp;#10;    pos=(0, -0.325),&amp;#10;    color='black',&amp;#10;    height=0.025&amp;#10;)&amp;#10;&amp;#10;# === START TIMER ===&amp;#10;timer_clock.reset()&amp;#10;running = True&amp;#10;&amp;#10;while running:&amp;#10;    elapsed = timer_clock.getTime()&amp;#10;    progress = max(0, 1 - (elapsed / timer_duration))&amp;#10;&amp;#10;    # ESC to quit&amp;#10;    keys = event.getKeys()&amp;#10;    if 'escape' in keys:&amp;#10;        core.quit()&amp;#10;&amp;#10;    # Update wedge&amp;#10;    if elapsed &lt; timer_duration:&amp;#10;        wedge.vertices = make_wedge(progress, radius)&amp;#10;&amp;#10;    # Draw components (in order)&amp;#10;    grayBox2.draw()       # background box&amp;#10;    circle_bg.draw()      # circle background behind wedge&amp;#10;    if elapsed &lt; timer_duration:&amp;#10;        wedge.draw()      # wedge timer&amp;#10;    label.draw()          # text label&amp;#10;&amp;#10;    # Flip screen&amp;#10;    win.flip()&amp;#10;&amp;#10;    # End after time limit&amp;#10;    if elapsed &gt;= timer_duration:&amp;#10;        running = False&amp;#10;&amp;#10;# === CONTINUE TO NEXT ROUTINE (no exit) ===&amp;#10;# Leave win open, ready for next block or routine " valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;        // add-on: list(s: string): string[]&amp;#10;        function list(s) {&amp;#10;            // if s is a string, we return a list of its characters&amp;#10;            if (typeof s === 'string')&amp;#10;                return s.split('');&amp;#10;            else&amp;#10;                // otherwise we return s:&amp;#10;                return s;&amp;#10;        }&amp;#10;&amp;#10;        import {core, event, visual} from 'psychopy';&amp;#10;import * as np from 'numpy';&amp;#10;import {core, event, visual} from 'psychopy';&amp;#10;import * as np from 'numpy';&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;timer_duration = 210;&amp;#10;radius = 0.075;&amp;#10;pos = [0, 0];&amp;#10;grayBox2 = new visual.Rect(psychoJS.window, {&quot;width&quot;: 0.8, &quot;height&quot;: 0.8, &quot;units&quot;: &quot;height&quot;, &quot;lineWidth&quot;: 0, &quot;lineColor&quot;: null, &quot;fillColor&quot;: [0.004, 0.004, 0.004], &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;pos&quot;: [0, 0]});&amp;#10;circle_bg = new visual.Circle(psychoJS.window, {&quot;radius&quot;: radius, &quot;edges&quot;: 128, &quot;fillColor&quot;: [0.1, 0.1, 0.1], &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;lineColor&quot;: null, &quot;pos&quot;: pos, &quot;autoDraw&quot;: false});&amp;#10;function make_wedge(progress_fraction, radius = 0.2, resolution = 100) {&amp;#10;    var angle, num_points, theta, verts, x, y;&amp;#10;    angle = (360 * progress_fraction);&amp;#10;    num_points = Math.max(2, Number.parseInt((resolution * progress_fraction)));&amp;#10;    theta = np.linspace(90, (90 + angle), num_points);&amp;#10;    x = (np.cos(np.deg2rad(theta)) * radius);&amp;#10;    y = (np.sin(np.deg2rad(theta)) * radius);&amp;#10;    verts = ([[0, 0]] + list(zip(x, y)));&amp;#10;    return verts;&amp;#10;}&amp;#10;timer_clock = new util.Clock();&amp;#10;wedge = new visual.ShapeStim(psychoJS.window, {&quot;vertices&quot;: make_wedge(1.0, radius), &quot;fillColor&quot;: [0.28, 0.28, 0.28], &quot;lineColor&quot;: null, &quot;fillColorSpace&quot;: &quot;rgb&quot;, &quot;pos&quot;: pos, &quot;closeShape&quot;: true, &quot;autoDraw&quot;: false});&amp;#10;label = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;This is a break period. You are over 50% complete.\nYou may relax and exit the eyetracker.&quot;, &quot;pos&quot;: [0, (- 0.325)], &quot;color&quot;: &quot;black&quot;, &quot;height&quot;: 0.025});&amp;#10;timer_clock.reset();&amp;#10;running = true;&amp;#10;while (running) {&amp;#10;    elapsed = timer_clock.getTime();&amp;#10;    progress = Math.max(0, (1 - (elapsed / timer_duration)));&amp;#10;    keys = psychoJS.eventManager.getKeys();&amp;#10;    if (_pj.in_es6(&quot;escape&quot;, keys)) {&amp;#10;        core.quit();&amp;#10;    }&amp;#10;    if ((elapsed &lt; timer_duration)) {&amp;#10;        wedge.vertices = make_wedge(progress, radius);&amp;#10;    }&amp;#10;    grayBox2.draw();&amp;#10;    circle_bg.draw();&amp;#10;    if ((elapsed &lt; timer_duration)) {&amp;#10;        wedge.draw();&amp;#10;    }&amp;#10;    label.draw();&amp;#10;    psychoJS.window.flip();&amp;#10;    if ((elapsed &gt;= timer_duration)) {&amp;#10;        running = false;&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if not hasattr(thisExp, 'skipFlagChecked'):&amp;#10;    if fMRI_enabled.lower() in ['yes', 'y']:&amp;#10;        continueRoutine = False&amp;#10;    thisExp.skipFlagChecked = True&amp;#10;&amp;#10;if continueRoutine:&amp;#10;    grayBox2.draw()&amp;#10;&amp;#10;    elapsed = timer_clock.getTime()&amp;#10;    progress = max(0, 1 - (elapsed / timer_duration))&amp;#10;&amp;#10;    wedge.vertices = make_wedge(progress)&amp;#10;&amp;#10;    if elapsed &lt; timer_duration:&amp;#10;        wedge.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! (&quot;skipFlagChecked&quot; in psychoJS.experiment))) {&amp;#10;    if (_pj.in_es6(fMRI_enabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;])) {&amp;#10;        continueRoutine = false;&amp;#10;    }&amp;#10;    psychoJS.experiment.skipFlagChecked = true;&amp;#10;}&amp;#10;if (continueRoutine) {&amp;#10;    grayBox2.draw();&amp;#10;    elapsed = timer_clock.getTime();&amp;#10;    progress = Math.max(0, (1 - (elapsed / timer_duration)));&amp;#10;    wedge.vertices = make_wedge(progress);&amp;#10;    if ((elapsed &lt; timer_duration)) {&amp;#10;        wedge.draw();&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="TimerCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Break_Period" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Break_Period" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="180" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="This is a three minute rest period.&amp;#10;&amp;#10;You may exit the eyetracker.&amp;#10;&amp;#10;When the rest has ended, the experiment will resume." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Break_Box" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Break_Box" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Routine_ISI_H2">
      <RoutineSettingsComponent name="Main_Routine_ISI_H2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_ISI_H2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Main_Task_H2_ISI" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Main_Task_H2_ISI" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$Pre_ISI" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Pre_ISI_Begin&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Pre_ISI_End&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Pre_ISI_Begin', time_trialBegin)&amp;#10;thisExp.addData('Pre_ISI_End', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Routine_ISI_H1">
      <RoutineSettingsComponent name="Main_Routine_ISI_H1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_ISI_H1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Main_Task_H1_ISI" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Main_Task_H1_ISI" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$Pre_ISI" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box1" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Post2_ISI_Begin&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Post2_ISI_End&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Post2_ISI_Begin', time_trialBegin)&amp;#10;thisExp.addData('Post2_ISI_End', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_1" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Routine_Stimulus_Selection_H2">
      <RoutineSettingsComponent name="Main_Routine_Stimulus_Selection_H2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_Stimulus_Selection_H2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="Cued_Image_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$Fractal_img" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Cued_Image_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="Estimation_Select_2" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$High_Prob_Choice_Corr" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Estimation_Select_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="Store_Selection_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="lastKey = None&amp;#10;selectedColor = 'grey'" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="lastKey = null;&amp;#10;selectedColor = &quot;grey&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (Estimation_Select_2.keys) {&amp;#10;    lastKey = Estimation_Select_2.keys;&amp;#10;    if (_pj.in_es6(lastKey, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        selectedColor = [0.0, 0.3, 0.05];&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(lastKey, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            selectedColor = [0.52, 0.4, (- 0.02)];&amp;#10;        } else {&amp;#10;            selectedColor = &quot;grey&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    lastKey = null;&amp;#10;    selectedColor = &quot;grey&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if Estimation_Select_2.keys:&amp;#10;    lastKey = Estimation_Select_2.keys&amp;#10;    if lastKey in ['left', '1']:&amp;#10;        selectedColor = [0.0000, 0.3, 0.05]&amp;#10;    elif lastKey in ['right', '2']:&amp;#10;        selectedColor = [0.52, 0.4, -0.02]&amp;#10;    else:&amp;#10;        selectedColor = 'grey'&amp;#10;else:&amp;#10;    lastKey = None&amp;#10;    selectedColor = 'grey'" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Store_Selection_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Choice_Begin_Time&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Choice_End_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Choice_Begin_Time', time_trialBegin)&amp;#10;thisExp.addData('Choice_End_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Routine_Stimulus_Post_Selection_H1">
      <RoutineSettingsComponent name="Main_Routine_Stimulus_Post_Selection_H1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_Stimulus_Post_Selection_H1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="Selection_Result" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$selectedColor" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="grey" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Selection_Result" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.225, 0.225)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="Cued_image_post" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$Fractal_img" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Cued_image_post" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="Box3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Post_choice_Begin_Time&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Post_choice_End_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Post_choice_Begin_Time', time_trialBegin)&amp;#10;thisExp.addData('Post_choice_End_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Routine_Stimulus_Selection_H1">
      <RoutineSettingsComponent name="Main_Routine_Stimulus_Selection_H1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_Stimulus_Selection_H1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="Cued_Image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$Fractal_img" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Cued_Image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="Estimation_Select" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$High_Prob_Choice_Corr" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Estimation_Select" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="Store_Selection" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="lastKey = None&amp;#10;selectedColor = 'grey'" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="lastKey = null;&amp;#10;selectedColor = &quot;grey&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (Estimation_Select.keys) {&amp;#10;    lastKey = Estimation_Select.keys;&amp;#10;    if (_pj.in_es6(lastKey, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        selectedColor = [0.0, 0.3, 0.05];&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(lastKey, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            selectedColor = [0.52, 0.4, (- 0.02)];&amp;#10;        } else {&amp;#10;            selectedColor = &quot;grey&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    lastKey = null;&amp;#10;    selectedColor = &quot;grey&quot;;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if Estimation_Select.keys:&amp;#10;    lastKey = Estimation_Select.keys&amp;#10;    if lastKey in ['left', '1']:&amp;#10;        selectedColor = [0.0000, 0.3, 0.05]&amp;#10;    elif lastKey in ['right', '2']:&amp;#10;        selectedColor = [0.52, 0.4, -0.02]&amp;#10;    else:&amp;#10;        selectedColor = 'grey'&amp;#10;else:&amp;#10;    lastKey = None&amp;#10;    selectedColor = 'grey'" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Store_Selection" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Choice_Begin_Time&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Choice_End_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Choice_Begin_Time', time_trialBegin)&amp;#10;thisExp.addData('Choice_End_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Task_PostISI_H1">
      <RoutineSettingsComponent name="Main_Task_PostISI_H1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Task_PostISI_H1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Main_Task_H1_Post_ISI" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Main_Task_H1_Post_ISI" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$Int_ISI" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;PostISI_End_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('PostISI_End_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Task_Post_Outcome_H1">
      <RoutineSettingsComponent name="Main_Task_Post_Outcome_H1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Task_Post_Outcome_H1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Shock_Code" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="ctl = DS8R(&amp;#10;    demand=10,          # adjust as needed&amp;#10;    pulse_width=100,    # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;# Define a function to run in a separate thread&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;❌ DS8R trigger error: {e}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = last_demand&amp;#10;ctl.pulse_width = last_pulse_width&amp;#10;ctl.enabled = 1  # Re-arm device&amp;#10;&amp;#10;if Outcome == 1:&amp;#10;    print(&quot;⚡ About to trigger DS8R...&quot;)&amp;#10;&amp;#10;    # Create and start the thread&amp;#10;    trigger_thread = threading.Thread(target=safe_run)&amp;#10;    trigger_thread.start()&amp;#10;&amp;#10;    # Wait for the thread to finish, with a timeout&amp;#10;    trigger_thread.join(timeout=2.0)  # adjust timeout as needed&amp;#10;&amp;#10;    if trigger_thread.is_alive():&amp;#10;        print(&quot;⚠️ DS8R trigger timed out — skipping trigger this trial.&quot;)&amp;#10;        # Optionally, try to reset ctl or log more info&amp;#10;    else:&amp;#10;        print(&quot;✅ DS8R trigger completed.&quot;)&amp;#10;else:&amp;#10;    print(&quot;⏭ No trigger this trial (Outcome != 1).&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Py" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;shock_time&quot;, time_shockTriggered);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Shock_Code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Outcome_Delivered_Time&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Outcome_Delivered_Routine_End&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Outcome_Delivered_Time', time_trialBegin)&amp;#10;thisExp.addData('Outcome_Delivered_Routine_End', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Cross_Outcomed" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Cross_Outcomed" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Main_Routine_Stimulus_Post_Selection_H2">
      <RoutineSettingsComponent name="Main_Routine_Stimulus_Post_Selection_H2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_Stimulus_Post_Selection_H2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <PolygonComponent name="Selection_Result_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$selectedColor" valType="color" updates="set every repeat" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="grey" valType="color" updates="set every repeat" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="Selection_Result_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.225, 0.225)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <ImageComponent name="Cued_image_post_2" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$Fractal_img" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="Cued_image_post_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.2)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <CodeComponent name="Box8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Post_choice_Begin_Time&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Post_choice_End_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Post_choice_Begin_Time', time_trialBegin)&amp;#10;thisExp.addData('Post_choice_End_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Task_PostISI_H2">
      <RoutineSettingsComponent name="Main_Task_PostISI_H2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Task_PostISI_H2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Main_Task_H1_Post_ISI_2" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Main_Task_H1_Post_ISI_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$Int_ISI" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box9" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Task_Post_Outcome_H2">
      <RoutineSettingsComponent name="Main_Task_Post_Outcome_H2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Task_Post_Outcome_H2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Cross_Outcomed_2" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Cross_Outcomed_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_11" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Outcome_Delivered_Time&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Outcome_Delivered_Routine_End&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Outcome_Delivered_Time', time_trialBegin)&amp;#10;thisExp.addData('Outcome_Delivered_Routine_End', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Shock_Code_2" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="ctl = DS8R(&amp;#10;    demand=10,          # adjust as needed&amp;#10;    pulse_width=100,    # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;# Define a function to run in a separate thread&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;❌ DS8R trigger error: {e}&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;function safe_run() {&amp;#10;    try {&amp;#10;        ctl.run();&amp;#10;    } catch(e) {&amp;#10;        console.log(`❌ DS8R trigger error: ${e}`);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = last_demand&amp;#10;ctl.pulse_width = last_pulse_width&amp;#10;ctl.enabled = 1  # Re-arm device&amp;#10;&amp;#10;if Outcome == 1:&amp;#10;    print(&quot;⚡ About to trigger DS8R...&quot;)&amp;#10;&amp;#10;    # Create and start the thread&amp;#10;    trigger_thread = threading.Thread(target=safe_run)&amp;#10;    trigger_thread.start()&amp;#10;&amp;#10;    # Wait for the thread to finish, with a timeout&amp;#10;    trigger_thread.join(timeout=2.0)  # adjust timeout as needed&amp;#10;&amp;#10;    if trigger_thread.is_alive():&amp;#10;        print(&quot;⚠️ DS8R trigger timed out — skipping trigger this trial.&quot;)&amp;#10;        # Optionally, try to reset ctl or log more info&amp;#10;    else:&amp;#10;        print(&quot;✅ DS8R trigger completed.&quot;)&amp;#10;else:&amp;#10;    print(&quot;⏭ No trigger this trial (Outcome != 1).&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;shock_time&quot;, time_shockTriggered);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Shock_Code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Task_End">
      <RoutineSettingsComponent name="Task_End" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Task_End" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box11" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box11" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="End_Text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="End_Text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="4" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="End of test.&amp;#10;&amp;#10;Thank you for participating. &amp;#10;&amp;#10;Please inform the researcher of your completion.&amp;#10;&amp;#10;Press 'escape' to close." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Timer_Final" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Experiment_End_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Experiment_End_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_Final" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Post_Break">
      <RoutineSettingsComponent name="Post_Break" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Post_Break" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Post_break_text" plugin="None">
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Post_break_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The break period has elapsed. Please call a researcher.&amp;#10;&amp;#10;Recalibration will commence on the next screen.&amp;#10;&amp;#10;&amp;#10;Press ← or → to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Post_break_keys" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Post_break_keys" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="Box13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box13" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Skipper3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="fMRI_enabled = expInfo.get('fMRI_enabled', 'no')" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="fMRI_enabled = expInfo.get(&quot;fMRI_enabled&quot;, &quot;no&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if (_pj.in_es6(fMRI_enabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;])) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if fMRI_enabled.lower() in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Skipper3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Instructions_2">
      <RoutineSettingsComponent name="Instructions_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Instructions_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box17" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box17" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Text_code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_black3 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;You must indicate what the image will \n result in by pressing ← or →.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.25),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_black4 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;→ means stimulation will occur. It will display: &quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.55, 0.1),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_black5 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;← means nothing will occur. It will display:  &quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.525, 0.0),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_further3 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;example_image1 = visual.ImageStim(&amp;#10;    win=win,&amp;#10;    image='Extra_img/Square_shock.png',&amp;#10;    pos=(0.28, 0.095),      # adjust to your desired screen location&amp;#10;    size=(0.035, 0.035)       # scale image as needed (in norm units or pixels)&amp;#10;)&amp;#10;&amp;#10;example_image2 = visual.ImageStim(&amp;#10;    win=win,&amp;#10;    image='Extra_img/Square_noshock.png',&amp;#10;    pos=(0.28, -0.0025),      # adjust to your desired screen location&amp;#10;    size=(0.035, 0.035)       # scale image as needed (in norm units or pixels)&amp;#10;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_black3 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;You must indicate what the image will \n result in by pressing \u2190 or \u2192.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.25], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_black4 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;\u2192 means stimulation will occur. It will display: &quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.55), 0.1], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_black5 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;\u2190 means nothing will occur. It will display:  &quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.525), 0.0], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_further3 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;example_image1 = new visual.ImageStim({&quot;win&quot;: psychoJS.window, &quot;image&quot;: &quot;Extra_img/Square_shock.png&quot;, &quot;pos&quot;: [0.28, 0.095], &quot;size&quot;: [0.035, 0.035]});&amp;#10;example_image2 = new visual.ImageStim({&quot;win&quot;: psychoJS.window, &quot;image&quot;: &quot;Extra_img/Square_noshock.png&quot;, &quot;pos&quot;: [0.28, (- 0.0025)], &quot;size&quot;: [0.035, 0.035]});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_black3.draw()&amp;#10;text_black4.draw()&amp;#10;text_black5.draw()&amp;#10;text_further3.draw()&amp;#10;example_image1.draw()&amp;#10;example_image2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_black3.draw();&amp;#10;text_black4.draw();&amp;#10;text_black5.draw();&amp;#10;text_further3.draw();&amp;#10;example_image1.draw();&amp;#10;example_image2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Text_code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Instr_Key2" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Instr_Key2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Instructions_3">
      <RoutineSettingsComponent name="Instructions_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Instructions_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box18" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box18" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Text_code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_ISI_instr1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;When you make a choice, this cross wil appear: &quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.25),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Please focus on the cross while it appears.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.125),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr3 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;When an event has occured (i.e. stimulation or not), \n the cross will change colour:&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.0),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr4 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;example_image3 = visual.ImageStim(&amp;#10;    win=win,&amp;#10;    image='Extra_img/inter_ISI.png',&amp;#10;    pos=(0.34, 0.248),      # adjust to your desired screen location&amp;#10;    size=(0.05, 0.055)       # scale image as needed (in norm units or pixels)&amp;#10;)&amp;#10;&amp;#10;example_image4 = visual.ImageStim(&amp;#10;    win=win,&amp;#10;    image='Extra_img/Event_Fixation.png',&amp;#10;    pos=(0.22, -0.0185),      # adjust to your desired screen location&amp;#10;    size=(0.05, 0.05)       # scale image as needed (in norm units or pixels)&amp;#10;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_ISI_instr1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;When you make a choice, this cross wil appear: &quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.25], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Please focus on the cross while it appears.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.125], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr3 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;When an event has occured (i.e. stimulation or not), \n the cross will change colour:&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.0], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr4 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;example_image3 = new visual.ImageStim({&quot;win&quot;: psychoJS.window, &quot;image&quot;: &quot;Extra_img/inter_ISI.png&quot;, &quot;pos&quot;: [0.34, 0.248], &quot;size&quot;: [0.05, 0.055]});&amp;#10;example_image4 = new visual.ImageStim({&quot;win&quot;: psychoJS.window, &quot;image&quot;: &quot;Extra_img/Event_Fixation.png&quot;, &quot;pos&quot;: [0.22, (- 0.0185)], &quot;size&quot;: [0.05, 0.05]});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_ISI_instr1.draw()&amp;#10;text_ISI_instr2.draw()&amp;#10;text_ISI_instr3.draw()&amp;#10;text_ISI_instr4.draw()&amp;#10;example_image3.draw()&amp;#10;example_image4.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_ISI_instr1.draw();&amp;#10;text_ISI_instr2.draw();&amp;#10;text_ISI_instr3.draw();&amp;#10;text_ISI_instr4.draw();&amp;#10;example_image3.draw();&amp;#10;example_image4.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Text_code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Instr_Key3" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Instr_Key3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Extra_ISI_2">
      <RoutineSettingsComponent name="Extra_ISI_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Extra_ISI_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Extra_ISI_Two" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Extra_ISI_Two" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_22" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_22" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_12" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;el_tracker.sendMessage(&quot;PRE_ISI&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()&amp;#10;el_tracker.sendMessage(&quot;PRE_ISI&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;PostHalf_ISI_Start&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;PostHalf_ISI_End.UseThisEndPoint.&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('PostHalf_ISI_Start', time_trialBegin)&amp;#10;thisExp.addData('PostHalf_ISI_End.UseThisEndPoint.', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Extra_ISI_1">
      <RoutineSettingsComponent name="Extra_ISI_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Extra_ISI_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Extra_ISI_One" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Extra_ISI_One" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_21" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_21" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;el_tracker.sendMessage(&quot;PRE_ISI&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()&amp;#10;el_tracker.sendMessage(&quot;PRE_ISI&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;PostHalf_ISI_Start&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;PostHalf_ISI_End.UseThisEndPoint.&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('PostHalf_ISI_Start', time_trialBegin)&amp;#10;thisExp.addData('PostHalf_ISI_End.UseThisEndPoint.', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Skipper2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;skipNextRoutine = _pj.in_es6(fMRI_enabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="skipNextRoutine = fMRI_enabled.lower() in ['yes', 'y']&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Skipper2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Blank">
      <RoutineSettingsComponent name="Blank" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Blank" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Blank_Text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Blank_Text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.05" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val=" " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box21" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box21" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_PostISI" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;PostISI_Start_Time&quot;, time_trialBegin);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('PostISI_Start_Time', time_trialBegin)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_PostISI" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <EyetrackerCalibrationRoutine name="calibration">
      <Param name="borderColor" updates="None" val="black" valType="color"/>
      <Param name="borderWidth" updates="None" val="2" valType="num"/>
      <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
      <Param name="disabled" updates="None" val="False" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="black" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="2" valType="num"/>
      <Param name="innerFillColor" updates="None" val="green" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.0035" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="calibration" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.01" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="NINE_POINTS" valType="str"/>
      <Param name="textColor" updates="None" val="white" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerCalibrationRoutine>
    <EyetrackerCalibrationRoutine name="EyeL_Cali">
      <Param name="borderColor" updates="None" val="black" valType="color"/>
      <Param name="borderWidth" updates="None" val="2" valType="num"/>
      <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
      <Param name="disabled" updates="None" val="True" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="black" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="2" valType="num"/>
      <Param name="innerFillColor" updates="None" val="gray" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.0035" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="EyeL_Cali" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.01" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="NINE_POINTS" valType="str"/>
      <Param name="textColor" updates="None" val="Black" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerCalibrationRoutine>
    <Routine name="Instructions_4">
      <RoutineSettingsComponent name="Instructions_4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Instructions_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box18_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box18_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Text_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_ISI_instr5 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;There will be a break halfway (~14 mins).&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr6 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;You will now begin calibration (if appropriate).&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.0),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr7 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_ISI_instr5 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;There will be a break halfway (~14 mins).&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr6 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;You will now begin calibration (if appropriate).&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.0], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr7 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_ISI_instr5.draw()&amp;#10;text_ISI_instr6.draw()&amp;#10;text_ISI_instr7.draw()&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_ISI_instr5.draw();&amp;#10;text_ISI_instr6.draw();&amp;#10;text_ISI_instr7.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Text_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Instr_Key4" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Instr_Key4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Instructions_Final">
      <RoutineSettingsComponent name="Instructions_Final" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Instructions_Final" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box18_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box18_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Text_code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;&amp;#10;text_ISI_instr8 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;You will now begin the task.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.25),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;&amp;#10;text_ISI_instr10 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Remember, left (←) means you think a shock will *not* occur. \n Right (→) means it will occur.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.0),  # adjust as needed&amp;#10;    height=0.025,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr9 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_ISI_instr8 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;You will now begin the task.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.25], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr10 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Remember, left (\u2190) means you think a shock will *not* occur. \n Right (\u2192) means it will occur.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.0], &quot;height&quot;: 0.025, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr9 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_ISI_instr8.draw()&amp;#10;text_ISI_instr10.draw()&amp;#10;text_ISI_instr9.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_ISI_instr8.draw();&amp;#10;text_ISI_instr10.draw();&amp;#10;text_ISI_instr9.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Text_code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Instr_Key5" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Instr_Key5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="Timer_0" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Experiment_Begin_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Experiment_Begin_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_0" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <EyetrackerValidationRoutine name="EyeL_Vali">
      <Param name="borderColor" updates="None" val="black" valType="color"/>
      <Param name="borderWidth" updates="None" val="2" valType="num"/>
      <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
      <Param name="cursorFillColor" updates="None" val="green" valType="color"/>
      <Param name="disabled" updates="None" val="True" valType="bool"/>
      <Param name="expandDur" updates="None" val="1" valType="num"/>
      <Param name="expandScale" updates="None" val="1.5" valType="num"/>
      <Param name="fillColor" updates="None" val="" valType="color"/>
      <Param name="innerBorderColor" updates="None" val="black" valType="color"/>
      <Param name="innerBorderWidth" updates="None" val="2" valType="num"/>
      <Param name="innerFillColor" updates="None" val="green" valType="color"/>
      <Param name="innerRadius" updates="None" val="0.0035" valType="num"/>
      <Param name="movementAnimation" updates="None" val="True" valType="bool"/>
      <Param name="movementDur" updates="None" val="1.0" valType="num"/>
      <Param name="name" updates="None" val="EyeL_Vali" valType="code"/>
      <Param name="outerRadius" updates="None" val="0.01" valType="num"/>
      <Param name="progressMode" updates="None" val="time" valType="str"/>
      <Param name="randomisePos" updates="None" val="True" valType="bool"/>
      <Param name="saveAsImg" updates="None" val="False" valType="bool"/>
      <Param name="showResults" updates="None" val="True" valType="bool"/>
      <Param name="targetDelay" updates="None" val="1.0" valType="num"/>
      <Param name="targetDur" updates="None" val="1.5" valType="num"/>
      <Param name="targetLayout" updates="None" val="NINE_POINTS" valType="str"/>
      <Param name="targetPositions" updates="None" val="NINE_POINTS" valType="list"/>
      <Param name="textColor" updates="None" val="auto" valType="color"/>
      <Param name="units" updates="None" val="from exp settings" valType="str"/>
    </EyetrackerValidationRoutine>
    <Routine name="ScannerPrompt">
      <RoutineSettingsComponent name="ScannerPrompt" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ScannerPrompt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Scanner_wait_text" plugin="None">
        <Param val="Black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.0375" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Scanner_wait_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Waiting for the scanner..." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Scanner_control" plugin="None">
        <Param val="'5'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Scanner_control" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="Scanner_timer" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="fMRI_enabled = expInfo.get('fMRI_enabled', 'No')&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="fMRI_enabled = expInfo.get(&quot;fMRI_enabled&quot;, &quot;No&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_ScannerPromptBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_ScannerPromptBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_ScannerPromptEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;time_ScannerPromptBegin&quot;, time_ScannerPromptBegin);&amp;#10;psychoJS.experiment.addData(&quot;time_ScannerPromptEnd&quot;, time_ScannerPromptEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_ScannerPromptEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('time_ScannerPromptBegin', time_ScannerPromptBegin)&amp;#10;thisExp.addData('time_ScannerPromptEnd', time_ScannerPromptEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Scanner_timer" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Routine_Skip" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="fMRI_enabled = expInfo.get('fMRI_enabled', 'no')&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="fMRI_enabled = expInfo.get(&quot;fMRI_enabled&quot;, &quot;no&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(fMRI_enabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if fMRI_enabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Routine_Skip" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="BoxScanPrompt" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="BoxScanPrompt" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Looper">
      <RoutineSettingsComponent name="Shock_Calib_Looper" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Looper" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="slider_keys" plugin="None">
        <Param val="'left','right', 'space', '1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_keys" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="pain_slider" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.5, -0.5, -0.5" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="0" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;0%&quot;, &quot;10%&quot;, &quot;20%&quot;, &quot;30%&quot;, &quot;40%&quot;, &quot;50%&quot;, &quot;60%&quot;, &quot;70%&quot;, &quot;80%&quot;, &quot;90%&quot;, &quot;100%&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_slider" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.65, 0.02)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="Box_Shock_Cali_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="slider_keys.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="slider_keys.clearEvents()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Read keypresses from the Builder's Keyboard component&amp;#10;keys = slider_keys.getKeys()&amp;#10;&amp;#10;for key in keys:&amp;#10;    if key.name in ['left', '1']:&amp;#10;        if pain_slider.markerPos is not None:&amp;#10;            pain_slider.markerPos = max(pain_slider.markerPos - 1, 0)&amp;#10;        else:&amp;#10;            pain_slider.markerPos = 0&amp;#10;&amp;#10;    elif key.name in ['right', '2']:&amp;#10;        if pain_slider.markerPos is not None:&amp;#10;            pain_slider.markerPos = min(pain_slider.markerPos + 1, 10)&amp;#10;        else:&amp;#10;            pain_slider.markerPos = 1&amp;#10;&amp;#10;    elif key.name in ['space', 'return']:&amp;#10;        rating = pain_slider.getRating()&amp;#10;        if rating is not None:&amp;#10;            print(f&quot;✅ Rating confirmed: {rating}&quot;)&amp;#10;            thisExp.addData(&quot;pain_rating&quot;, rating)&amp;#10;            continueRoutine = False  # End the routine&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = slider_keys.getKeys();&amp;#10;for (var key, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    key = _pj_a[_pj_c];&amp;#10;    if (_pj.in_es6(key.name, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        if ((pain_slider.markerPos !== null)) {&amp;#10;            pain_slider.markerPos = Math.max((pain_slider.markerPos - 1), 0);&amp;#10;        } else {&amp;#10;            pain_slider.markerPos = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(key.name, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            if ((pain_slider.markerPos !== null)) {&amp;#10;                pain_slider.markerPos = Math.min((pain_slider.markerPos + 1), 10);&amp;#10;            } else {&amp;#10;                pain_slider.markerPos = 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(key.name, [&quot;space&quot;, &quot;return&quot;])) {&amp;#10;                rating = pain_slider.getRating();&amp;#10;                if ((rating !== null)) {&amp;#10;                    console.log(`✅ Rating confirmed: ${rating}`);&amp;#10;                    psychoJS.experiment.addData(&quot;pain_rating&quot;, rating);&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider.rating === null) &amp;&amp; (pain_slider.markerPos !== null))) {&amp;#10;    pain_slider.rating = pain_slider.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider.rating);&amp;#10;last_rating = pain_slider.rating;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure the slider rating is set from markerPos when using keyboard control&amp;#10;if pain_slider.rating is None and pain_slider.markerPos is not None:&amp;#10;    pain_slider.rating = pain_slider.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider.rating)&amp;#10;&amp;#10;last_rating = pain_slider.rating" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_sliderconf_1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;How strong was the stimulation?&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_sliderconf_2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Press \u2190 or \u2192 to change rating. Press spacebar to confirm.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;How strong was the stimulation?&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Press ← or → to change rating. Press spacebar to confirm.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_sliderconf_1.draw()&amp;#10;text_sliderconf_2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_sliderconf_1.draw();&amp;#10;text_sliderconf_2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="End_Loop" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider.rating === null) &amp;&amp; (pain_slider.markerPos !== null))) {&amp;#10;    pain_slider.rating = pain_slider.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider.rating);&amp;#10;Last_rating = pain_slider.rating;&amp;#10;if (((pain_slider.rating === null) &amp;&amp; (pain_slider.markerPos !== null))) {&amp;#10;    pain_slider.rating = pain_slider.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider.rating);&amp;#10;if ((pain_slider.rating &gt;= 8)) {&amp;#10;    Cali_Loop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure rating is stored&amp;#10;if pain_slider.rating is None and pain_slider.markerPos is not None:&amp;#10;    pain_slider.rating = pain_slider.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider.rating)&amp;#10;&amp;#10;Last_rating = pain_slider.rating&amp;#10;&amp;#10;# Ensure rating is stored&amp;#10;if pain_slider.rating is None and pain_slider.markerPos is not None:&amp;#10;    pain_slider.rating = pain_slider.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider.rating)&amp;#10;&amp;#10;# Check stopping/looping conditions&amp;#10;if pain_slider.rating &gt;= 8:&amp;#10;    Cali_Loop.finished = True  # End loop as target achieved" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="End_Loop" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Instr">
      <RoutineSettingsComponent name="Shock_Calib_Instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box_Shock_Cali_1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_1" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Shock_Cali_Instr_Text" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_shockcal_instr1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;We will now determine your stimulation threshold.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_shockcal_instr2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Starting low, we will gradually increase the stimulation.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_shockcal_instr3 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;We wish to understand your 80% stimulation threshold.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.05),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_shockcal_instr4 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_shockcal_instr1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;We will now determine your stimulation threshold.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_shockcal_instr2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Starting low, we will gradually increase the stimulation.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_shockcal_instr3 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;We wish to understand your 80% stimulation threshold.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.05)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_shockcal_instr4 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_shockcal_instr1.draw()&amp;#10;text_shockcal_instr2.draw()&amp;#10;text_shockcal_instr3.draw()&amp;#10;text_shockcal_instr4.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_shockcal_instr1.draw();&amp;#10;text_shockcal_instr2.draw();&amp;#10;text_shockcal_instr3.draw();&amp;#10;text_shockcal_instr4.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Shock_Cali_Instr_Text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Cali_Instr_Keyboard" plugin="None">
        <Param val="'left','right'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Cali_Instr_Keyboard" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Shock_Calib_Instr2">
      <RoutineSettingsComponent name="Shock_Calib_Instr2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Instr2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box_Shock_Cali" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Shock_Cali_Instr_Text_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_shockcal_instr5 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;On the next screen you will receive the first stimulation.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_shockcal_instr6 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Please rate this from 0 - 100% using the slider provided. \n Press spacebar to confirm your rating.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_shockcal_instr7 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;We cannot proceed until certain about your 80% threshold.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_shockcal_instr8 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_shockcal_instr5 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;On the next screen you will receive the first stimulation.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_shockcal_instr6 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Please rate this from 0 - 100% using the slider provided. \n Press spacebar to confirm your rating.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_shockcal_instr7 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;We cannot proceed until certain about your 80% threshold.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.05)], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_shockcal_instr8 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_shockcal_instr5.draw()&amp;#10;text_shockcal_instr6.draw()&amp;#10;text_shockcal_instr7.draw()&amp;#10;text_shockcal_instr8.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_shockcal_instr5.draw();&amp;#10;text_shockcal_instr6.draw();&amp;#10;text_shockcal_instr7.draw();&amp;#10;text_shockcal_instr8.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Shock_Cali_Instr_Text_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Cali_Instr_Keyboard_2" plugin="None">
        <Param val="'left','right','space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Cali_Instr_Keyboard_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Pre_Shock_ISI_Calib">
      <RoutineSettingsComponent name="Pre_Shock_ISI_Calib" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Shock_ISI_Calib" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Pre_Cali_ISI" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Pre_Cali_ISI" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_Cali_Pre" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Pre" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    Cali_Loop.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    Cali_Loop.finished = True&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip1" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_ISI_Calib">
      <RoutineSettingsComponent name="Shock_ISI_Calib" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_ISI_Calib" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Calib_Shock_Cross" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Calib_Shock_Cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Stimulation_Calib_Code" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="last_demand = None&amp;#10;last_pulse_width = None&amp;#10;&amp;#10;ctl = DS8R(&amp;#10;    demand=10,  # adjust as needed&amp;#10;    pulse_width=100,   # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;DS8R trigger error: {e}&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="last_demand = null;&amp;#10;last_pulse_width = null;&amp;#10;ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;function safe_run() {&amp;#10;    try {&amp;#10;        ctl.run();&amp;#10;    } catch(e) {&amp;#10;        console.log(`DS8R trigger error: ${e}`);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = int(Set_Demand)&amp;#10;ctl.pulse_width = int(Set_Width)&amp;#10;ctl.enabled = 1  # Re-arm device&amp;#10;&amp;#10;trigger_thread = threading.Thread(target=safe_run)&amp;#10;trigger_thread.start()&amp;#10;trigger_thread.join(timeout=2.0)  # 2-second timeout&amp;#10;&amp;#10;if trigger_thread.is_alive():&amp;#10;    print(&quot;⚠️ DS8R trigger timed out!&quot;)&amp;#10;    # Optionally kill the thread or reset ctl here&amp;#10;&amp;#10;last_demand = Set_Demand&amp;#10;last_pulse_width = Set_Width" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Stimulation_Calib_Code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box_Cali_Shock" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Shock" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Pre_Shock_ISI_Cali_Check_1">
      <RoutineSettingsComponent name="Pre_Shock_ISI_Cali_Check_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Shock_ISI_Cali_Check_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Pre_Cali_ISI_2" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Pre_Cali_ISI_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_Cali_Pre_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Pre_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    FirstLoopPass.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    FirstLoopPass.finished = True  # End loop as target achieved&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_ISI_Post_Check_1">
      <RoutineSettingsComponent name="Shock_ISI_Post_Check_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_ISI_Post_Check_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Calib_Shock_Cross_2" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Calib_Shock_Cross_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Stimulation_Calib_Code_2" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="ctl = DS8R(&amp;#10;    demand=10,  # adjust as needed&amp;#10;    pulse_width=100,   # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;DS8R trigger error: {e}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;function safe_run() {&amp;#10;    try {&amp;#10;        ctl.run();&amp;#10;    } catch(e) {&amp;#10;        console.log(`DS8R trigger error: ${e}`);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = last_demand&amp;#10;ctl.pulse_width = last_pulse_width&amp;#10;ctl.enabled = 1  # Re-arm device&amp;#10;&amp;#10;trigger_thread = threading.Thread(target=safe_run)&amp;#10;trigger_thread.start()&amp;#10;trigger_thread.join(timeout=2.0)  # 2-second timeout&amp;#10;&amp;#10;if trigger_thread.is_alive():&amp;#10;    print(&quot;⚠️ DS8R trigger timed out!&quot;)&amp;#10;    # Optionally kill the thread or reset ctl here" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Stimulation_Calib_Code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box_Cali_Shock_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Shock_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip6" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Looper_2">
      <RoutineSettingsComponent name="Shock_Calib_Looper_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Looper_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="slider_keys2" plugin="None">
        <Param val="'left','right', 'space', '1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_keys2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="pain_slider2" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.5, -0.5, -0.5" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="0" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;0%&quot;, &quot;10%&quot;, &quot;20%&quot;, &quot;30%&quot;, &quot;40%&quot;, &quot;50%&quot;, &quot;60%&quot;, &quot;70%&quot;, &quot;80%&quot;, &quot;90%&quot;, &quot;100%&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_slider2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.65, 0.02)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="Box_Shock_Cali_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="slider_keys2.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="slider_keys2.clearEvents()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Read keypresses from the Builder's Keyboard component&amp;#10;keys = slider_keys2.getKeys()&amp;#10;&amp;#10;for key in keys:&amp;#10;    if key.name in ['left', '1']:&amp;#10;        if pain_slider2.markerPos is not None:&amp;#10;            pain_slider2.markerPos = max(pain_slider2.markerPos - 1, 0)&amp;#10;        else:&amp;#10;            pain_slider2.markerPos = 0&amp;#10;&amp;#10;    elif key.name in ['right', '2']:&amp;#10;        if pain_slider2.markerPos is not None:&amp;#10;            pain_slider2.markerPos = min(pain_slider2.markerPos + 1, 10)&amp;#10;        else:&amp;#10;            pain_slider2.markerPos = 1&amp;#10;&amp;#10;    elif key.name in ['space', 'return']:&amp;#10;        rating = pain_slider2.getRating()&amp;#10;        if rating is not None:&amp;#10;            print(f&quot;✅ Rating confirmed: {rating}&quot;)&amp;#10;            thisExp.addData(&quot;pain_rating2&quot;, rating)&amp;#10;            continueRoutine = False  # End the routine&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = slider_keys2.getKeys();&amp;#10;for (var key, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    key = _pj_a[_pj_c];&amp;#10;    if (_pj.in_es6(key.name, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        if ((pain_slider2.markerPos !== null)) {&amp;#10;            pain_slider2.markerPos = Math.max((pain_slider2.markerPos - 1), 0);&amp;#10;        } else {&amp;#10;            pain_slider2.markerPos = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(key.name, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            if ((pain_slider2.markerPos !== null)) {&amp;#10;                pain_slider2.markerPos = Math.min((pain_slider2.markerPos + 1), 10);&amp;#10;            } else {&amp;#10;                pain_slider2.markerPos = 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(key.name, [&quot;space&quot;, &quot;return&quot;])) {&amp;#10;                rating = pain_slider2.getRating();&amp;#10;                if ((rating !== null)) {&amp;#10;                    console.log(`✅ Rating confirmed: ${rating}`);&amp;#10;                    psychoJS.experiment.addData(&quot;pain_rating2&quot;, rating);&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Text_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_sliderconf_1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;How strong was the stimulation?&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_sliderconf_2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Press \u2190 or \u2192 to change rating. Press spacebar to confirm.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;How strong was the stimulation?&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Press ← or → to change rating. Press spacebar to confirm.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_sliderconf_1.draw()&amp;#10;text_sliderconf_2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_sliderconf_1.draw();&amp;#10;text_sliderconf_2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Text_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="End_Loop_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider2.rating === null) &amp;&amp; (pain_slider2.markerPos !== null))) {&amp;#10;    pain_slider2.rating = pain_slider2.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider2.rating);&amp;#10;if ((pain_slider2.rating === 8)) {&amp;#10;    FirstLoopPass.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure rating is stored&amp;#10;if pain_slider2.rating is None and pain_slider2.markerPos is not None:&amp;#10;    pain_slider2.rating = pain_slider2.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider2.rating)&amp;#10;&amp;#10;if pain_slider2.rating == 8:&amp;#10;    FirstLoopPass.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="End_Loop_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip7" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Loop_Checkpoint">
      <RoutineSettingsComponent name="Loop_Checkpoint" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Loop_Checkpoint" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Checkpoint_code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((pain_slider.rating === 8)) {&amp;#10;    Checkpoint.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Check stopping/looping conditions&amp;#10;if pain_slider.rating == 8:&amp;#10;    Checkpoint.finished = True  # End loop as target achieved" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Checkpoint_code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    Checkpoint.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    Checkpoint.finished = True  # End loop as target achieved&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Checkpoint_2">
      <RoutineSettingsComponent name="Checkpoint_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Checkpoint_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
    </Routine>
    <Routine name="Pre_Shock_ISI_Cali_Check_2">
      <RoutineSettingsComponent name="Pre_Shock_ISI_Cali_Check_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Shock_ISI_Cali_Check_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Pre_Cali_ISI_3" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Pre_Cali_ISI_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_Cali_Pre_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Pre_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    SecondLoopPass.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    SecondLoopPass.finished = True  # End loop as target achieved&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip8" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_ISI_Post_Check_2">
      <RoutineSettingsComponent name="Shock_ISI_Post_Check_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_ISI_Post_Check_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Calib_Shock_Cross_3" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Calib_Shock_Cross_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Stimulation_Calib_Code_3" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="ctl = DS8R(&amp;#10;    demand=10,  # adjust as needed&amp;#10;    pulse_width=100,   # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;DS8R trigger error: {e}&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;function safe_run() {&amp;#10;    try {&amp;#10;        ctl.run();&amp;#10;    } catch(e) {&amp;#10;        console.log(`DS8R trigger error: ${e}`);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = last_demand&amp;#10;ctl.pulse_width = last_pulse_width&amp;#10;ctl.enabled = 1  # Re-arm device&amp;#10;&amp;#10;trigger_thread = threading.Thread(target=safe_run)&amp;#10;trigger_thread.start()&amp;#10;trigger_thread.join(timeout=2.0)  # 2-second timeout&amp;#10;&amp;#10;if trigger_thread.is_alive():&amp;#10;    print(&quot;⚠️ DS8R trigger timed out!&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Stimulation_Calib_Code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box_Cali_Shock_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Shock_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip9" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Looper_3">
      <RoutineSettingsComponent name="Shock_Calib_Looper_3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Looper_3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="slider_keys3" plugin="None">
        <Param val="'left','right', 'space', '1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_keys3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys3.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="pain_slider3" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.5, -0.5, -0.5" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="0" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;0%&quot;, &quot;10%&quot;, &quot;20%&quot;, &quot;30%&quot;, &quot;40%&quot;, &quot;50%&quot;, &quot;60%&quot;, &quot;70%&quot;, &quot;80%&quot;, &quot;90%&quot;, &quot;100%&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_slider3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.65, 0.02)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys3.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="Box_Shock_Cali_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="slider_keys2.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="slider_keys2.clearEvents()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Read keypresses from the Builder's Keyboard component&amp;#10;keys = slider_keys3.getKeys()&amp;#10;&amp;#10;for key in keys:&amp;#10;    if key.name in ['left', '1']:&amp;#10;        if pain_slider3.markerPos is not None:&amp;#10;            pain_slider3.markerPos = max(pain_slider3.markerPos - 1, 0)&amp;#10;        else:&amp;#10;            pain_slider3.markerPos = 0&amp;#10;&amp;#10;    elif key.name in ['right', '2']:&amp;#10;        if pain_slider3.markerPos is not None:&amp;#10;            pain_slider3.markerPos = min(pain_slider3.markerPos + 1, 10)&amp;#10;        else:&amp;#10;            pain_slider3.markerPos = 1&amp;#10;&amp;#10;    elif key.name in ['space', 'return']:&amp;#10;        rating = pain_slider3.getRating()&amp;#10;        if rating is not None:&amp;#10;            print(f&quot;✅ Rating confirmed: {rating}&quot;)&amp;#10;            thisExp.addData(&quot;pain_rating3&quot;, rating)&amp;#10;            continueRoutine = False  # End the routine&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = slider_keys3.getKeys();&amp;#10;for (var key, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    key = _pj_a[_pj_c];&amp;#10;    if (_pj.in_es6(key.name, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        if ((pain_slider3.markerPos !== null)) {&amp;#10;            pain_slider3.markerPos = Math.max((pain_slider3.markerPos - 1), 0);&amp;#10;        } else {&amp;#10;            pain_slider3.markerPos = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(key.name, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            if ((pain_slider3.markerPos !== null)) {&amp;#10;                pain_slider3.markerPos = Math.min((pain_slider3.markerPos + 1), 10);&amp;#10;            } else {&amp;#10;                pain_slider3.markerPos = 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(key.name, [&quot;space&quot;, &quot;return&quot;])) {&amp;#10;                rating = pain_slider3.getRating();&amp;#10;                if ((rating !== null)) {&amp;#10;                    console.log(`✅ Rating confirmed: ${rating}`);&amp;#10;                    psychoJS.experiment.addData(&quot;pain_rating3&quot;, rating);&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Text_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_sliderconf_1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;How strong was the stimulation?&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_sliderconf_2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Press \u2190 or \u2192 to change rating. Press spacebar to confirm.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;How strong was the stimulation?&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Press ← or → to change rating. Press spacebar to confirm.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_sliderconf_1.draw()&amp;#10;text_sliderconf_2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_sliderconf_1.draw();&amp;#10;text_sliderconf_2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Text_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="End_Loop_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider3.rating === null) &amp;&amp; (pain_slider3.markerPos !== null))) {&amp;#10;    pain_slider3.rating = pain_slider3.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating3&quot;, pain_slider3.rating);&amp;#10;if ((pain_slider3.rating === 8)) {&amp;#10;    SecondLoopPass.finished = true;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;first_cali_final_demand&quot;, last_demand);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure rating is stored&amp;#10;if pain_slider3.rating is None and pain_slider3.markerPos is not None:&amp;#10;    pain_slider3.rating = pain_slider3.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating3', pain_slider3.rating)&amp;#10;&amp;#10;if pain_slider3.rating == 8:&amp;#10;    SecondLoopPass.finished = True&amp;#10;    &amp;#10;thisExp.addData('first_cali_final_demand', last_demand)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="End_Loop_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip10" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Looper_4">
      <RoutineSettingsComponent name="Shock_Calib_Looper_4" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Looper_4" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="slider_keys2_3" plugin="None">
        <Param val="'left','right', 'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_keys2_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="pain_slider2_3" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.5, -0.5, -0.5" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="0" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;0%&quot;, &quot;10%&quot;, &quot;20%&quot;, &quot;30%&quot;, &quot;40%&quot;, &quot;50%&quot;, &quot;60%&quot;, &quot;70%&quot;, &quot;80%&quot;, &quot;90%&quot;, &quot;100%&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_slider2_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.65, 0.02)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="Box_Shock_Cali_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="slider_keys2.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="slider_keys2.clearEvents()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Read keypresses from the Builder's Keyboard component&amp;#10;keys = slider_keys2.getKeys()&amp;#10;&amp;#10;for key in keys:&amp;#10;    if key.name == 'left':&amp;#10;        if pain_slider2.markerPos is not None:&amp;#10;            pain_slider2.markerPos = max(pain_slider2.markerPos - 1, 0)&amp;#10;        else:&amp;#10;            pain_slider2.markerPos = 0&amp;#10;&amp;#10;    elif key.name == 'right':&amp;#10;        if pain_slider2.markerPos is not None:&amp;#10;            pain_slider2.markerPos = min(pain_slider2.markerPos + 1, 10)&amp;#10;        else:&amp;#10;            pain_slider2.markerPos = 1&amp;#10;&amp;#10;    elif key.name in ['space', 'return']:&amp;#10;        rating = pain_slider2.getRating()&amp;#10;        if rating is not None:&amp;#10;            print(f&quot;✅ Rating confirmed: {rating}&quot;)&amp;#10;            thisExp.addData(&quot;pain_rating2&quot;, rating)&amp;#10;            continueRoutine = False  # End the routine&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = slider_keys2.getKeys();&amp;#10;for (var key, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    key = _pj_a[_pj_c];&amp;#10;    if ((key.name === &quot;left&quot;)) {&amp;#10;        if ((pain_slider2.markerPos !== null)) {&amp;#10;            pain_slider2.markerPos = Math.max((pain_slider2.markerPos - 1), 0);&amp;#10;        } else {&amp;#10;            pain_slider2.markerPos = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if ((key.name === &quot;right&quot;)) {&amp;#10;            if ((pain_slider2.markerPos !== null)) {&amp;#10;                pain_slider2.markerPos = Math.min((pain_slider2.markerPos + 1), 10);&amp;#10;            } else {&amp;#10;                pain_slider2.markerPos = 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(key.name, [&quot;space&quot;, &quot;return&quot;])) {&amp;#10;                rating = pain_slider2.getRating();&amp;#10;                if ((rating !== null)) {&amp;#10;                    console.log(`✅ Rating confirmed: ${rating}`);&amp;#10;                    psychoJS.experiment.addData(&quot;pain_rating2&quot;, rating);&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Text_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_sliderconf_1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;How strong was the stimulation?&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_sliderconf_2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Press \u2190 or \u2192 to change rating. Press spacebar to confirm.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;How strong was the stimulation?&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Press ← or → to change rating. Press spacebar to confirm.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_sliderconf_1.draw()&amp;#10;text_sliderconf_2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_sliderconf_1.draw();&amp;#10;text_sliderconf_2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Text_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="End_Loop_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider2.rating === null) &amp;&amp; (pain_slider2.markerPos !== null))) {&amp;#10;    pain_slider2.rating = pain_slider2.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider2.rating);&amp;#10;if ((pain_slider2.rating === 8)) {&amp;#10;    FirstLoopPass.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure rating is stored&amp;#10;if pain_slider2.rating is None and pain_slider2.markerPos is not None:&amp;#10;    pain_slider2.rating = pain_slider2.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider2.rating)&amp;#10;&amp;#10;if pain_slider2.rating == 8:&amp;#10;    FirstLoopPass.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="End_Loop_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Pre_Shock_ISI_Calib2">
      <RoutineSettingsComponent name="Pre_Shock_ISI_Calib2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Shock_ISI_Calib2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Pre_Cali_ISI_4" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Pre_Cali_ISI_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_Cali_Pre_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Pre_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip1_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    Cali_Loop.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    Cali_Loop.finished = True&amp;#10;    continueRoutine = False&amp;#10;    &amp;#10;    " valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip1_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Pre_Shock_ISI_Calib_2">
      <RoutineSettingsComponent name="Pre_Shock_ISI_Calib_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Shock_ISI_Calib_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Pre_Cali_ISI_5" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Pre_Cali_ISI_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_Cali_Pre_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Pre_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip1_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    CaliLoop2.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    CaliLoop2.finished = True&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip1_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_ISI_Calib_2">
      <RoutineSettingsComponent name="Shock_ISI_Calib_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_ISI_Calib_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Calib_Shock_Cross_4" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Calib_Shock_Cross_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Stimulation_Calib_Code_4" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="last_demand = None&amp;#10;last_pulse_width = None&amp;#10;&amp;#10;ctl = DS8R(&amp;#10;    demand=10,  # adjust as needed&amp;#10;    pulse_width=100,   # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;DS8R trigger error: {e}&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="last_demand = null;&amp;#10;last_pulse_width = null;&amp;#10;ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;function safe_run() {&amp;#10;    try {&amp;#10;        ctl.run();&amp;#10;    } catch(e) {&amp;#10;        console.log(`DS8R trigger error: ${e}`);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = int(Set_Demand)&amp;#10;ctl.pulse_width = int(Set_Width)&amp;#10;ctl.enabled = 1  # Re-arm device&amp;#10;&amp;#10;trigger_thread = threading.Thread(target=safe_run)&amp;#10;trigger_thread.start()&amp;#10;trigger_thread.join(timeout=2.0)  # 2-second timeout&amp;#10;&amp;#10;if trigger_thread.is_alive():&amp;#10;    print(&quot;⚠️ DS8R trigger timed out!&quot;)&amp;#10;    # Optionally kill the thread or reset ctl here&amp;#10;&amp;#10;last_demand = Set_Demand&amp;#10;last_pulse_width = Set_Width" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Stimulation_Calib_Code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box_Cali_Shock_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Shock_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip2_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip2_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Looper_5">
      <RoutineSettingsComponent name="Shock_Calib_Looper_5" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Looper_5" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="slider_keys_2" plugin="None">
        <Param val="'left','right', 'space', '1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_keys_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys_2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="pain_slider_2" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.5, -0.5, -0.5" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="0" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;0%&quot;, &quot;10%&quot;, &quot;20%&quot;, &quot;30%&quot;, &quot;40%&quot;, &quot;50%&quot;, &quot;60%&quot;, &quot;70%&quot;, &quot;80%&quot;, &quot;90%&quot;, &quot;100%&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_slider_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.65, 0.02)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys_2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="Box_Shock_Cali_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="slider_keys.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="slider_keys.clearEvents()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Read keypresses from the Builder's Keyboard component&amp;#10;keys = slider_keys_2.getKeys()&amp;#10;&amp;#10;for key in keys:&amp;#10;    if key.name in ['left', '1']:&amp;#10;        if pain_slider_2.markerPos is not None:&amp;#10;            pain_slider_2.markerPos = max(pain_slider_2.markerPos - 1, 0)&amp;#10;        else:&amp;#10;            pain_slider_2.markerPos = 0&amp;#10;&amp;#10;    elif key.name in ['right', '2']:&amp;#10;        if pain_slider_2.markerPos is not None:&amp;#10;            pain_slider_2.markerPos = min(pain_slider_2.markerPos + 1, 10)&amp;#10;        else:&amp;#10;            pain_slider_2.markerPos = 1&amp;#10;&amp;#10;    elif key.name in ['space', 'return']:&amp;#10;        rating = pain_slider_2.getRating()&amp;#10;        if rating is not None:&amp;#10;            print(f&quot;✅ Rating confirmed: {rating}&quot;)&amp;#10;            thisExp.addData(&quot;pain_rating&quot;, rating)&amp;#10;            continueRoutine = False  # End the routine&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = slider_keys_2.getKeys();&amp;#10;for (var key, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    key = _pj_a[_pj_c];&amp;#10;    if (_pj.in_es6(key.name, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        if ((pain_slider_2.markerPos !== null)) {&amp;#10;            pain_slider_2.markerPos = Math.max((pain_slider_2.markerPos - 1), 0);&amp;#10;        } else {&amp;#10;            pain_slider_2.markerPos = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(key.name, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            if ((pain_slider_2.markerPos !== null)) {&amp;#10;                pain_slider_2.markerPos = Math.min((pain_slider_2.markerPos + 1), 10);&amp;#10;            } else {&amp;#10;                pain_slider_2.markerPos = 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(key.name, [&quot;space&quot;, &quot;return&quot;])) {&amp;#10;                rating = pain_slider_2.getRating();&amp;#10;                if ((rating !== null)) {&amp;#10;                    console.log(`✅ Rating confirmed: ${rating}`);&amp;#10;                    psychoJS.experiment.addData(&quot;pain_rating&quot;, rating);&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider_2.rating === null) &amp;&amp; (pain_slider_2.markerPos !== null))) {&amp;#10;    pain_slider_2.rating = pain_slider_2.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider_2.rating);&amp;#10;last_rating = pain_slider_2.rating;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure the slider rating is set from markerPos when using keyboard control&amp;#10;if pain_slider_2.rating is None and pain_slider_2.markerPos is not None:&amp;#10;    pain_slider_2.rating = pain_slider_2.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider_2.rating)&amp;#10;&amp;#10;last_rating = pain_slider_2.rating" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Text_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_sliderconf_1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;How strong was the stimulation?&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_sliderconf_2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Press \u2190 or \u2192 to change rating. Press spacebar to confirm.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;How strong was the stimulation?&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Press ← or → to change rating. Press spacebar to confirm.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_sliderconf_1.draw()&amp;#10;text_sliderconf_2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_sliderconf_1.draw();&amp;#10;text_sliderconf_2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Text_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="End_Loop_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider_2.rating === null) &amp;&amp; (pain_slider_2.markerPos !== null))) {&amp;#10;    pain_slider_2.rating = pain_slider_2.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider_2.rating);&amp;#10;Last_rating = pain_slider.rating;&amp;#10;if (((pain_slider_2.rating === null) &amp;&amp; (pain_slider.markerPos !== null))) {&amp;#10;    pain_slider_2.rating = pain_slider_2.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider_2.rating);&amp;#10;if ((pain_slider_2.rating &gt;= 8)) {&amp;#10;    CaliLoop2.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure rating is stored&amp;#10;if pain_slider_2.rating is None and pain_slider_2.markerPos is not None:&amp;#10;    pain_slider_2.rating = pain_slider_2.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider_2.rating)&amp;#10;&amp;#10;Last_rating = pain_slider.rating&amp;#10;&amp;#10;# Ensure rating is stored&amp;#10;if pain_slider_2.rating is None and pain_slider.markerPos is not None:&amp;#10;    pain_slider_2.rating = pain_slider_2.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider_2.rating)&amp;#10;&amp;#10;# Check stopping/looping conditions&amp;#10;if pain_slider_2.rating &gt;= 8:&amp;#10;    CaliLoop2.finished = True  # End loop as target achieved" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="End_Loop_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip3_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip3_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Loop_Checkpoint_2">
      <RoutineSettingsComponent name="Loop_Checkpoint_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Loop_Checkpoint_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Checkpoint_code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((pain_slider.rating === 8)) {&amp;#10;    Checkpoint2.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Check stopping/looping conditions&amp;#10;if pain_slider.rating == 8:&amp;#10;    Checkpoint2.finished = True  # End loop as target achieved" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Checkpoint_code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip4_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    Checkpoint2.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    Checkpoint2.finished = True  # End loop as target achieved&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip4_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Pre_Shock_ISI_Cali_Check_1_2">
      <RoutineSettingsComponent name="Pre_Shock_ISI_Cali_Check_1_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Shock_ISI_Cali_Check_1_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Pre_Cali_ISI_6" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Pre_Cali_ISI_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_Cali_Pre_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Pre_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip5_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    FirstLoopPass2.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    FirstLoopPass2.finished = True  # End loop as target achieved&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip5_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_ISI_Post_Check_1_2">
      <RoutineSettingsComponent name="Shock_ISI_Post_Check_1_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_ISI_Post_Check_1_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Calib_Shock_Cross_5" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Calib_Shock_Cross_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Stimulation_Calib_Code_5" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="ctl = DS8R(&amp;#10;    demand=10,  # adjust as needed&amp;#10;    pulse_width=100,   # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;DS8R trigger error: {e}&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;function safe_run() {&amp;#10;    try {&amp;#10;        ctl.run();&amp;#10;    } catch(e) {&amp;#10;        console.log(`DS8R trigger error: ${e}`);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = last_demand&amp;#10;ctl.pulse_width = last_pulse_width&amp;#10;ctl.enabled = 1  # re-arm the device&amp;#10;&amp;#10;trigger_thread = threading.Thread(target=safe_run)&amp;#10;trigger_thread.start()&amp;#10;trigger_thread.join(timeout=2.0)  # 2-second timeout&amp;#10;&amp;#10;if trigger_thread.is_alive():&amp;#10;    print(&quot;⚠️ DS8R trigger timed out!&quot;)&amp;#10;    # Optionally kill the thread or reset ctl here" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Stimulation_Calib_Code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box_Cali_Shock_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Shock_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip6_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip6_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Looper_6">
      <RoutineSettingsComponent name="Shock_Calib_Looper_6" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Looper_6" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="slider_keys2_2" plugin="None">
        <Param val="'left','right', 'space', '1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_keys2_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys2_2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="pain_slider2_2" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.5, -0.5, -0.5" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="0" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;0%&quot;, &quot;10%&quot;, &quot;20%&quot;, &quot;30%&quot;, &quot;40%&quot;, &quot;50%&quot;, &quot;60%&quot;, &quot;70%&quot;, &quot;80%&quot;, &quot;90%&quot;, &quot;100%&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_slider2_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.65, 0.02)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys2_2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="Box_Shock_Cali_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="slider_keys2.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="slider_keys2.clearEvents()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Read keypresses from the Builder's Keyboard component&amp;#10;keys = slider_keys2_2.getKeys()&amp;#10;&amp;#10;for key in keys:&amp;#10;    if key.name in ['left', '1']:&amp;#10;        if pain_slider2_2.markerPos is not None:&amp;#10;            pain_slider2_2.markerPos = max(pain_slider2_2.markerPos - 1, 0)&amp;#10;        else:&amp;#10;            slider_keys2_2.markerPos = 0&amp;#10;&amp;#10;    elif key.name in ['right', '2']:&amp;#10;        if pain_slider2_2.markerPos is not None:&amp;#10;            pain_slider2_2.markerPos = min(pain_slider2_2.markerPos + 1, 10)&amp;#10;        else:&amp;#10;            slider_keys2_2.markerPos = 1&amp;#10;&amp;#10;    elif key.name in ['space', 'return']:&amp;#10;        rating = pain_slider2_2.getRating()&amp;#10;        if rating is not None:&amp;#10;            print(f&quot;✅ Rating confirmed: {rating}&quot;)&amp;#10;            thisExp.addData(&quot;pain_rating2&quot;, rating)&amp;#10;            continueRoutine = False  # End the routine&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = slider_keys2_2.getKeys();&amp;#10;for (var key, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    key = _pj_a[_pj_c];&amp;#10;    if (_pj.in_es6(key.name, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        if ((pain_slider2_2.markerPos !== null)) {&amp;#10;            pain_slider2_2.markerPos = Math.max((pain_slider2_2.markerPos - 1), 0);&amp;#10;        } else {&amp;#10;            slider_keys2_2.markerPos = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(key.name, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            if ((pain_slider2_2.markerPos !== null)) {&amp;#10;                pain_slider2_2.markerPos = Math.min((pain_slider2_2.markerPos + 1), 10);&amp;#10;            } else {&amp;#10;                slider_keys2_2.markerPos = 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(key.name, [&quot;space&quot;, &quot;return&quot;])) {&amp;#10;                rating = pain_slider2_2.getRating();&amp;#10;                if ((rating !== null)) {&amp;#10;                    console.log(`✅ Rating confirmed: ${rating}`);&amp;#10;                    psychoJS.experiment.addData(&quot;pain_rating2&quot;, rating);&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Text_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_sliderconf_1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;How strong was the stimulation?&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_sliderconf_2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Press \u2190 or \u2192 to change rating. Press spacebar to confirm.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;How strong was the stimulation?&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Press ← or → to change rating. Press spacebar to confirm.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_sliderconf_1.draw()&amp;#10;text_sliderconf_2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_sliderconf_1.draw();&amp;#10;text_sliderconf_2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Text_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="End_Loop_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider2_2.rating === null) &amp;&amp; (pain_slider2_2.markerPos !== null))) {&amp;#10;    pain_slider2_2.rating = pain_slider2_2.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating&quot;, pain_slider2_2.rating);&amp;#10;if ((pain_slider2_2.rating === 8)) {&amp;#10;    FirstLoopPass2.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure rating is stored&amp;#10;if pain_slider2_2.rating is None and pain_slider2_2.markerPos is not None:&amp;#10;    pain_slider2_2.rating = pain_slider2_2.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating', pain_slider2_2.rating)&amp;#10;&amp;#10;if pain_slider2_2.rating == 8:&amp;#10;    FirstLoopPass2.finished = True" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="End_Loop_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip7_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip7_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Pre_Shock_ISI_Check_2_2">
      <RoutineSettingsComponent name="Pre_Shock_ISI_Check_2_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Shock_ISI_Check_2_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Pre_Cali_ISI_7" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Pre_Cali_ISI_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box_Cali_Pre_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Pre_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip8_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    SecondLoopPass.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    SecondLoopPass.finished = True  # End loop as target achieved&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip8_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_ISI_Post_Check_2_2">
      <RoutineSettingsComponent name="Shock_ISI_Post_Check_2_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_ISI_Post_Check_2_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Calib_Shock_Cross_6" plugin="None">
        <Param val="-1.0000, -0.6706, -0.3490" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Calib_Shock_Cross_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Stimulation_Calib_Code_6" plugin="None">
        <Param val="import os&amp;#10;import sys&amp;#10;import ctypes&amp;#10;&amp;#10;# --- Step 1: Set paths ---&amp;#10;ds8r_dir = r&quot;C:\Users\PERLadmin\Desktop\DOREA_Task_Battery\PAL\DS8R&quot;&amp;#10;dll_path = os.path.join(ds8r_dir, &quot;D128RProxy.dll&quot;)&amp;#10;&amp;#10;# --- Step 2: Load the DLL manually ---&amp;#10;try:&amp;#10;    ctypes.WinDLL(dll_path)&amp;#10;    print(&quot;✅ DLL loaded manually.&quot;)&amp;#10;except Exception as e:&amp;#10;    print(f&quot;❌ DLL load failed: {e}&quot;)&amp;#10;&amp;#10;# --- Step 3: Update working directory and sys.path ---&amp;#10;os.chdir(ds8r_dir)&amp;#10;sys.path.append(ds8r_dir)&amp;#10;&amp;#10;# --- Step 4: Import DS8R module ---&amp;#10;from ds8r import DS8R&amp;#10;print(&quot;✅ DS8R module imported successfully.&quot;)&amp;#10;&amp;#10;import threading&amp;#10;" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="ctl = DS8R(&amp;#10;    demand=10,  # adjust as needed&amp;#10;    pulse_width=100,   # adjust as needed&amp;#10;    enabled=0,&amp;#10;    dwell=10,&amp;#10;    mode=1,&amp;#10;    polarity=1,&amp;#10;    source=1,&amp;#10;)&amp;#10;&amp;#10;def safe_run():&amp;#10;    try:&amp;#10;        ctl.run()&amp;#10;    except Exception as e:&amp;#10;        print(f&quot;DS8R trigger error: {e}&quot;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="ctl = new DS8R({&quot;demand&quot;: 10, &quot;pulse_width&quot;: 100, &quot;enabled&quot;: 0, &quot;dwell&quot;: 10, &quot;mode&quot;: 1, &quot;polarity&quot;: 1, &quot;source&quot;: 1});&amp;#10;function safe_run() {&amp;#10;    try {&amp;#10;        ctl.run();&amp;#10;    } catch(e) {&amp;#10;        console.log(`DS8R trigger error: ${e}`);&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="/* Syntax Error: Fix Python code */" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="ctl.demand = last_demand&amp;#10;ctl.pulse_width = last_pulse_width&amp;#10;ctl.enabled = 1  # Re-arm device&amp;#10;&amp;#10;trigger_thread = threading.Thread(target=safe_run)&amp;#10;trigger_thread.start()&amp;#10;trigger_thread.join(timeout=2.0)  # 2-second timeout&amp;#10;&amp;#10;if trigger_thread.is_alive():&amp;#10;    print(&quot;⚠️ DS8R trigger timed out!&quot;)&amp;#10;    # Optionally kill the thread or reset ctl here" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Stimulation_Calib_Code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Box_Cali_Shock_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Cali_Shock_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip9_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip9_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Shock_Calib_Looper_7">
      <RoutineSettingsComponent name="Shock_Calib_Looper_7" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Shock_Calib_Looper_7" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <KeyboardComponent name="slider_keys3_2" plugin="None">
        <Param val="'left','right', 'space', '1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="slider_keys3_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys3_2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="pain_slider3_2" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="-0.5, -0.5, -0.5" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="0" valType="code" updates="None" name="initVal"/>
        <Param val="&quot;0%&quot;, &quot;10%&quot;, &quot;20%&quot;, &quot;30%&quot;, &quot;40%&quot;, &quot;50%&quot;, &quot;60%&quot;, &quot;70%&quot;, &quot;80%&quot;, &quot;90%&quot;, &quot;100%&quot;" valType="list" updates="constant" name="labels"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_slider3_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.65, 0.02)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="$'space' in slider_keys3_2.keys" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="Box_Shock_Cali_9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Shock_Cali_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Code_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="slider_keys2.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="slider_keys2.clearEvents()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Read keypresses from the Builder's Keyboard component&amp;#10;keys = slider_keys3_2.getKeys()&amp;#10;&amp;#10;for key in keys:&amp;#10;    if key.name in ['left', '1']:&amp;#10;        if pain_slider3_2.markerPos is not None:&amp;#10;            pain_slider3_2.markerPos = max(pain_slider3_2.markerPos - 1, 0)&amp;#10;        else:&amp;#10;            pain_slider3_2.markerPos = 0&amp;#10;&amp;#10;    elif key.name in ['right', '2']:&amp;#10;        if pain_slider3_2.markerPos is not None:&amp;#10;            pain_slider3_2.markerPos = min(pain_slider3_2.markerPos + 1, 10)&amp;#10;        else:&amp;#10;            pain_slider3_2.markerPos = 1&amp;#10;&amp;#10;    elif key.name in ['space', 'return']:&amp;#10;        rating = pain_slider3_2.getRating()&amp;#10;        if rating is not None:&amp;#10;            print(f&quot;✅ Rating confirmed: {rating}&quot;)&amp;#10;            thisExp.addData(&quot;pain_rating3&quot;, rating)&amp;#10;            continueRoutine = False  # End the routine&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys = slider_keys3_2.getKeys();&amp;#10;for (var key, _pj_c = 0, _pj_a = keys, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    key = _pj_a[_pj_c];&amp;#10;    if (_pj.in_es6(key.name, [&quot;left&quot;, &quot;1&quot;])) {&amp;#10;        if ((pain_slider3_2.markerPos !== null)) {&amp;#10;            pain_slider3_2.markerPos = Math.max((pain_slider3_2.markerPos - 1), 0);&amp;#10;        } else {&amp;#10;            pain_slider3_2.markerPos = 0;&amp;#10;        }&amp;#10;    } else {&amp;#10;        if (_pj.in_es6(key.name, [&quot;right&quot;, &quot;2&quot;])) {&amp;#10;            if ((pain_slider3_2.markerPos !== null)) {&amp;#10;                pain_slider3_2.markerPos = Math.min((pain_slider3_2.markerPos + 1), 10);&amp;#10;            } else {&amp;#10;                pain_slider3_2.markerPos = 1;&amp;#10;            }&amp;#10;        } else {&amp;#10;            if (_pj.in_es6(key.name, [&quot;space&quot;, &quot;return&quot;])) {&amp;#10;                rating = pain_slider3_2.getRating();&amp;#10;                if ((rating !== null)) {&amp;#10;                    console.log(`✅ Rating confirmed: ${rating}`);&amp;#10;                    psychoJS.experiment.addData(&quot;pain_rating3&quot;, rating);&amp;#10;                    continueRoutine = false;&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Slider_Text_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_sliderconf_1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;How strong was the stimulation?&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.15], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_sliderconf_2 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;Press \u2190 or \u2192 to change rating. Press spacebar to confirm.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.05], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;How strong was the stimulation?&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.15),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_sliderconf_2 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;Press ← or → to change rating. Press spacebar to confirm.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.05),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_sliderconf_1.draw()&amp;#10;text_sliderconf_2.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_sliderconf_1.draw();&amp;#10;text_sliderconf_2.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Slider_Text_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="End_Loop_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (((pain_slider3_2.rating === null) &amp;&amp; (pain_slider3_2.markerPos !== null))) {&amp;#10;    pain_slider3_2.rating = pain_slider3_2.markerPos;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;pain_rating3&quot;, pain_slider3_2.rating);&amp;#10;if ((pain_slider3_2.rating === 8)) {&amp;#10;    SecondLoopPass2.finished = true;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;second_cali_final_demand&quot;, last_demand);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Ensure rating is stored&amp;#10;if pain_slider3_2.rating is None and pain_slider3_2.markerPos is not None:&amp;#10;    pain_slider3_2.rating = pain_slider3_2.markerPos&amp;#10;&amp;#10;thisExp.addData('pain_rating3', pain_slider3_2.rating)&amp;#10;&amp;#10;if pain_slider3_2.rating == 8:&amp;#10;    SecondLoopPass2.finished = True&amp;#10;    &amp;#10;thisExp.addData('second_cali_final_demand', last_demand)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="End_Loop_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="RoutSkip10_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="RoutSkip10_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Recal_Instr">
      <RoutineSettingsComponent name="Recal_Instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Recal_Instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box_Recal_Instr" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_Recal_Instr" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Recal_Instr_Text" plugin="None">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.025" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Recal_Instr_Text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You will now recalibrate your stimulation threshold.&amp;#10;&amp;#10;As before, please rate from 0 - 100%.&amp;#10;&amp;#10;We will proceed once we understand your 80% threshold.&amp;#10;&amp;#10;&amp;#10;Press ← or → to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="Recal_Procced_Keys" plugin="None">
        <Param val="'left','right','1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Recal_Procced_Keys" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="Skip_Recab" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! _pj.in_es6(StimCalEnabled.toLowerCase(), [&quot;yes&quot;, &quot;y&quot;]))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if StimCalEnabled.lower() not in ['yes', 'y']:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="Skip_Recab" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="EyeL_Recal_Instr">
      <RoutineSettingsComponent name="EyeL_Recal_Instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="EyeL_Recal_Instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box_EyeCalInstr" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box_EyeCalInstr" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="EyeTracker_Cali">
      <RoutineSettingsComponent name="EyeTracker_Cali" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="EyeTracker_Cali" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CameraSetup name="CameraSetup_1" plugin="psychopy-eyelink">
        <Param val="win.color" valType="str" updates="None" name="backgroundColor"/>
        <Param val="'qbeep.wav','type.wav','error.wav'" valType="str" updates="None" name="calibrationFilenames"/>
        <Param val="defaults" valType="str" updates="constant" name="calibrationSounds"/>
        <Param val="HV5" valType="str" updates="constant" name="calibrationType"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(1,1,1)" valType="str" updates="None" name="foregroundColor"/>
        <Param val="CameraSetup_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.01" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="None" name="targetFilename"/>
        <Param val="24" valType="str" updates="None" name="targetSize"/>
        <Param val="circle" valType="str" updates="constant" name="targetType"/>
      </CameraSetup>
      <CodeComponent name="EyeLink_Cali" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="# This End Experiment tab of the elConnect component calls the &amp;#10;# terminate_task helper function to get the EDF file and close the connection&amp;#10;# to the Host PC&amp;#10;&amp;#10;# Disconnect, download the EDF file, then terminate the task&amp;#10;terminate_task(genv,edf_file,session_folder,session_identifier)" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="terminate_task(genv, edf_file, session_folder, session_identifier);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="el_tracker.doTrackerSetup();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="el_tracker.doTrackerSetup()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="EyeLink_Cali" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="EyeL_calib_instr">
      <RoutineSettingsComponent name="EyeL_calib_instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="EyeL_calib_instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box15" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box15" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="EyeCal_Instr" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;text_eyecal_instr1 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;On the next screen, we will calibrate the eyetracker.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.10),  # adjust as needed&amp;#10;    height=0.0275,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;&amp;#10;&amp;#10;text_eyecal_instr3 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_eyecal_instr1 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;On the next screen, we will calibrate the eyetracker.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.1], &quot;height&quot;: 0.0275, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_eyecal_instr3 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_eyecal_instr1.draw()&amp;#10;text_eyecal_instr3.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_eyecal_instr1.draw();&amp;#10;text_eyecal_instr3.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="EyeCal_Instr" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="EyeT_Recal_Prompt" plugin="None">
        <Param val="'left','right','1', '2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="EyeT_Recal_Prompt" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Instructions_Final_2">
      <RoutineSettingsComponent name="Instructions_Final_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Instructions_Final_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Box18_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box18_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Text_code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="from psychopy import visual, core, event&amp;#10;&amp;#10;# One text stim per color segment&amp;#10;&amp;#10;text_ISI_instr50 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;You will now return to the task.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.1),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr51 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=&quot;This is the final half.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, 0.0),  # adjust as needed&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;text_ISI_instr9 = visual.TextStim(&amp;#10;    win,&amp;#10;    text=f&quot;Press ← or → to continue.&quot;,&amp;#10;    color='black',&amp;#10;    pos=(-0.5, -0.25),  # shift right to align after green text&amp;#10;    height=0.03,&amp;#10;    anchorHoriz='left'&amp;#10;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="import {core, event, visual} from 'psychopy';&amp;#10;text_ISI_instr50 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;You will now return to the task.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.1], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr51 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: &quot;This is the final half.&quot;, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), 0.0], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;text_ISI_instr9 = new visual.TextStim(psychoJS.window, {&quot;text&quot;: `Press ← or → to continue.`, &quot;color&quot;: &quot;black&quot;, &quot;pos&quot;: [(- 0.5), (- 0.25)], &quot;height&quot;: 0.03, &quot;anchorHoriz&quot;: &quot;left&quot;});&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="text_ISI_instr50.draw()&amp;#10;text_ISI_instr51.draw()&amp;#10;text_ISI_instr9.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="text_ISI_instr50.draw();&amp;#10;text_ISI_instr51.draw();&amp;#10;text_ISI_instr9.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Text_code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="Instr_Key5_2" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="Instr_Key5_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.2" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="Timer" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Experiment_Begin_Time&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Experiment_Begin_Time', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Eye_Link_Initialisation">
      <RoutineSettingsComponent name="Eye_Link_Initialisation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Eye_Link_Initialisation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <InitializeConnection name="Initialise_Eyelink" plugin="psychopy-eyelink">
        <Param val="False" valType="bool" updates="None" name="disableEyeLinkAudio"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="bool" updates="None" name="dummyMode"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="100.1.1.1" valType="str" updates="None" name="hostAddress"/>
        <Param val="Initialise_Eyelink" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="False" valType="bool" updates="None" name="useCustomHostIP"/>
      </InitializeConnection>
    </Routine>
    <Routine name="DriftCheck">
      <RoutineSettingsComponent name="DriftCheck" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="DriftCheck" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <DriftCheck name="DriftCheck_2" plugin="psychopy-eyelink">
        <Param val="win.color" valType="str" updates="None" name="backgroundColor"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="'qbeep.wav','type.wav','error.wav'" valType="str" updates="None" name="driftCheckFilenames"/>
        <Param val="defaults" valType="str" updates="constant" name="driftCheckSounds"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="(1,1,1)" valType="str" updates="None" name="foregroundColor"/>
        <Param val="DriftCheck_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="pix" valType="str" updates="constant" name="screenUnitType"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.001" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="None" name="targetFilename"/>
        <Param val="[0,0]" valType="str" updates="None" name="targetPosition"/>
        <Param val="24" valType="str" updates="None" name="targetSize"/>
        <Param val="circle" valType="str" updates="constant" name="targetType"/>
      </DriftCheck>
      <CodeComponent name="Drift_Check" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="el_tracker.doDriftCorrect(Number.parseInt((psychoJS.window.size[0] / 2)), Number.parseInt((psychoJS.window.size[1] / 2)), 1, 1);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Run drift correction at screen center&amp;#10;el_tracker.doDriftCorrect(int(win.size[0]/2), int(win.size[1]/2), 1, 1)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="Drift_Check" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Begin_Recording">
      <RoutineSettingsComponent name="Begin_Recording" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Begin_Recording" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <StartRecording name="StartRecord" plugin="psychopy-eyelink">
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="StartRecord" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.001" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </StartRecording>
      <CodeComponent name="Begin_Recording_Eyetracker_1" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="el_tracker.sendMessage(&quot;RECORDING_START_HALF_1&quot;);&amp;#10;el_tracker.startRecording(1, 1, 1, 1);&amp;#10;pylink.pumpDelay(100);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="el_tracker.sendMessage(&quot;RECORDING_START_HALF_1&quot;)&amp;#10;el_tracker.startRecording(1, 1, 1, 1)&amp;#10;pylink.pumpDelay(100)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Begin_Recording_Eyetracker_1" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="End_Recording">
      <RoutineSettingsComponent name="End_Recording" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="End_Recording" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="Stop_Recording" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="core.wait(0.5);&amp;#10;el_tracker.sendMessage(&quot;RECORDING_END_HALF_1&quot;);&amp;#10;pylink.pumpDelay(100);&amp;#10;el_tracker.stopRecording();&amp;#10;core.wait(0.5);&amp;#10;el_tracker.sendCommand(&quot;clear_screen 0&quot;);&amp;#10;el_tracker.sendMessage(&quot;!V CLEAR 128 128 128&quot;);&amp;#10;continueRoutine = false;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# This End Routine tab of the elStopRecord component stops eye tracker recording&amp;#10;&amp;#10;core.wait(0.5)&amp;#10;&amp;#10;# stop recording; add 100 msec to catch final events before stopping&amp;#10;el_tracker.sendMessage(&quot;RECORDING_END_HALF_1&quot;)&amp;#10;pylink.pumpDelay(100)&amp;#10;el_tracker.stopRecording()&amp;#10;&amp;#10;core.wait(0.5)&amp;#10;&amp;#10;# Optional clean-up on the Host display&amp;#10;el_tracker.sendCommand('clear_screen 0')             # Clear host display&amp;#10;el_tracker.sendMessage('!V CLEAR 128 128 128')       # Clear overlay in Data Viewer&amp;#10;&amp;#10;continueRoutine = False" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Stop_Recording" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="Blank_Text_End" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Blank_Text_End" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val=" " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'left','right','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.5" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="routine_1">
      <RoutineSettingsComponent name="routine_1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="routine_1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
    </Routine>
    <Routine name="Begin_Recording_2">
      <RoutineSettingsComponent name="Begin_Recording_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Begin_Recording_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <StartRecording name="StartRecord_2" plugin="psychopy-eyelink">
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="StartRecord_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.001" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </StartRecording>
      <CodeComponent name="Begin_Recording_Eyetracker" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="el_tracker.sendMessage(&quot;RECORDING_START_HALF_2&quot;);&amp;#10;el_tracker.startRecording(1, 1, 1, 1);&amp;#10;pylink.pumpDelay(100);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="el_tracker.sendMessage(&quot;RECORDING_START_HALF_2&quot;)&amp;#10;el_tracker.startRecording(1, 1, 1, 1)&amp;#10;pylink.pumpDelay(100)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Begin_Recording_Eyetracker" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="End_Recording_2">
      <RoutineSettingsComponent name="End_Recording_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="End_Recording_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <StopRecording name="StopRecord_2" plugin="psychopy-eyelink">
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="StopRecord_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
      </StopRecording>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'left','right','space','1','2'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="True" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="1" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Pre_Break_Buffer">
      <RoutineSettingsComponent name="Pre_Break_Buffer" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Break_Buffer" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Buffer_Text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Buffer_Text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val=" " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Pre_Block_ISI">
      <RoutineSettingsComponent name="Pre_Block_ISI" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Pre_Block_ISI" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="ISI_Pre" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="ISI_Pre" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="3" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Pre_Box" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Pre_Box" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Pre_Timer" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Pre_ISI_Begin&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Pre_ISI_End&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Pre_ISI_Begin', time_trialBegin)&amp;#10;thisExp.addData('Pre_ISI_End', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Pre_Timer" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Main_Routine_ISI_H2_2">
      <RoutineSettingsComponent name="Main_Routine_ISI_H2_2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Main_Routine_ISI_H2_2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="Main_Task_H1_ISI_2" plugin="None">
        <Param val="-0.7500, -0.7500, -0.7500" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.125" valType="num" updates="constant" name="letterHeight"/>
        <Param val="Main_Task_H1_ISI_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$Pre_ISI" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="Box1_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="grayBox.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="grayBox.draw();&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Box1_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="Timer_13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_trialBegin = globalClock.getTime();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_trialBegin = globalClock.getTime()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="time_trialEnd = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;Post2_ISI_Begin&quot;, time_trialBegin);&amp;#10;psychoJS.experiment.addData(&quot;Post2_ISI_End&quot;, time_trialEnd);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="time_trialEnd = globalClock.getTime()&amp;#10;&amp;#10;thisExp.addData('Post2_ISI_Begin', time_trialBegin)&amp;#10;thisExp.addData('Post2_ISI_End', time_trialEnd)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="Timer_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Initialisation"/>
    <Routine name="Instructions"/>
    <Routine name="Instructions_2"/>
    <Routine name="Instructions_3"/>
    <Routine name="Instructions_4"/>
    <Routine name="Shock_Calib_Instr"/>
    <Routine name="Shock_Calib_Instr2"/>
    <LoopInitiator loopType="TrialHandler" name="SecondLoopPass">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="99" valType="num"/>
      <Param name="name" updates="None" val="SecondLoopPass" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="FirstLoopPass">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="99" valType="num"/>
      <Param name="name" updates="None" val="FirstLoopPass" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="Checkpoint">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="99" valType="num"/>
      <Param name="name" updates="None" val="Checkpoint" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="Cali_Loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Set_Demand': 10, 'Set_Width': 2000}, {'Set_Demand': 20, 'Set_Width': 2000}, {'Set_Demand': 30, 'Set_Width': 2000}, {'Set_Demand': 40, 'Set_Width': 2000}, {'Set_Demand': 50, 'Set_Width': 2000}, {'Set_Demand': 60, 'Set_Width': 2000}, {'Set_Demand': 70, 'Set_Width': 2000}, {'Set_Demand': 80, 'Set_Width': 2000}, {'Set_Demand': 90, 'Set_Width': 2000}, {'Set_Demand': 100, 'Set_Width': 2000}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Conditions/Shock_Calibration_Sched.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="Cali_Loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Pre_Shock_ISI_Calib"/>
    <Routine name="Shock_ISI_Calib"/>
    <Routine name="Shock_Calib_Looper"/>
    <LoopTerminator name="Cali_Loop"/>
    <Routine name="Loop_Checkpoint"/>
    <LoopTerminator name="Checkpoint"/>
    <Routine name="Pre_Shock_ISI_Cali_Check_1"/>
    <Routine name="Shock_ISI_Post_Check_1"/>
    <Routine name="Shock_Calib_Looper_2"/>
    <LoopTerminator name="FirstLoopPass"/>
    <Routine name="Pre_Shock_ISI_Cali_Check_2"/>
    <Routine name="Shock_ISI_Post_Check_2"/>
    <Routine name="Shock_Calib_Looper_3"/>
    <LoopTerminator name="SecondLoopPass"/>
    <Routine name="Instructions_Final"/>
    <LoopInitiator loopType="TrialHandler" name="Prompt_Looper">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="5" valType="num"/>
      <Param name="name" updates="None" val="Prompt_Looper" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="ScannerPrompt"/>
    <LoopTerminator name="Prompt_Looper"/>
    <Routine name="Pre_Block_ISI"/>
    <LoopInitiator loopType="TrialHandler" name="InnerLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$VersionSelection_H1" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="InnerLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Blank"/>
    <Routine name="Main_Routine_Stimulus_Selection_H1"/>
    <Routine name="Main_Routine_Stimulus_Post_Selection_H1"/>
    <Routine name="Blank"/>
    <Routine name="Main_Task_PostISI_H1"/>
    <Routine name="Main_Task_Post_Outcome_H1"/>
    <Routine name="Main_Routine_ISI_H1"/>
    <LoopTerminator name="InnerLoop"/>
    <Routine name="Break"/>
    <Routine name="Post_Break"/>
    <Routine name="Recal_Instr"/>
    <LoopInitiator loopType="TrialHandler" name="SecondLoopPass2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="99" valType="num"/>
      <Param name="name" updates="None" val="SecondLoopPass2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="FirstLoopPass2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="99" valType="num"/>
      <Param name="name" updates="None" val="FirstLoopPass2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="Checkpoint2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="99" valType="num"/>
      <Param name="name" updates="None" val="Checkpoint2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <LoopInitiator loopType="TrialHandler" name="CaliLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Set_Demand': 10, 'Set_Width': 2000}, {'Set_Demand': 20, 'Set_Width': 2000}, {'Set_Demand': 30, 'Set_Width': 2000}, {'Set_Demand': 40, 'Set_Width': 2000}, {'Set_Demand': 50, 'Set_Width': 2000}, {'Set_Demand': 60, 'Set_Width': 2000}, {'Set_Demand': 70, 'Set_Width': 2000}, {'Set_Demand': 80, 'Set_Width': 2000}, {'Set_Demand': 90, 'Set_Width': 2000}, {'Set_Demand': 100, 'Set_Width': 2000}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="Conditions/Shock_Calibration_Sched.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="CaliLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Pre_Shock_ISI_Calib_2"/>
    <Routine name="Shock_ISI_Calib_2"/>
    <Routine name="Shock_Calib_Looper_5"/>
    <LoopTerminator name="CaliLoop2"/>
    <Routine name="Loop_Checkpoint_2"/>
    <LoopTerminator name="Checkpoint2"/>
    <Routine name="Pre_Shock_ISI_Cali_Check_1_2"/>
    <Routine name="Shock_ISI_Post_Check_1_2"/>
    <Routine name="Shock_Calib_Looper_6"/>
    <LoopTerminator name="FirstLoopPass2"/>
    <Routine name="Pre_Shock_ISI_Check_2_2"/>
    <Routine name="Shock_ISI_Post_Check_2_2"/>
    <Routine name="Shock_Calib_Looper_7"/>
    <LoopTerminator name="SecondLoopPass2"/>
    <Routine name="Instructions_Final_2"/>
    <Routine name="Pre_Block_ISI"/>
    <LoopInitiator loopType="TrialHandler" name="InnerLoop2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$VersionSelection_H2" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="InnerLoop2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Blank"/>
    <Routine name="Main_Routine_Stimulus_Selection_H2"/>
    <Routine name="Main_Routine_Stimulus_Post_Selection_H2"/>
    <Routine name="Blank"/>
    <Routine name="Main_Task_PostISI_H2"/>
    <Routine name="Main_Task_Post_Outcome_H2"/>
    <Routine name="Main_Routine_ISI_H2_2"/>
    <LoopTerminator name="InnerLoop2"/>
    <Routine name="End_Recording_2"/>
    <Routine name="Task_End"/>
  </Flow>
</PsychoPy2experiment>
